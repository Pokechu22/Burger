{
    "achievements": {},
    "blocks": {
        "block": {
            "grass": [
                {
                    "class": "den",
                    "display_name": "Grass",
                    "field": "bt",
                    "hardness": 0.0,
                    "max_state_id": 2005,
                    "min_state_id": 2005,
                    "num_states": 1,
                    "numeric_id": 123,
                    "resistance": 0.0,
                    "states": [],
                    "super": [
                        "cws",
                        "cwj"
                    ],
                    "text_id": "grass"
                },
                null
            ],
            "short_grass": [
                null,
                {
                    "class": "det",
                    "display_name": "Short Grass",
                    "field": "bt",
                    "hardness": 0.0,
                    "max_state_id": 2005,
                    "min_state_id": 2005,
                    "num_states": 1,
                    "numeric_id": 123,
                    "resistance": 0.0,
                    "states": [],
                    "super": [
                        "cwy",
                        "cwp"
                    ],
                    "text_id": "short_grass"
                }
            ]
        }
    },
    "entities": {
        "dataserializers": {},
        "entity": {}
    },
    "items": {
        "item": {
            "grass": [
                {
                    "display_name": "Grass",
                    "field": "cM",
                    "max_stack_size": 64,
                    "numeric_id": 194,
                    "text_id": "grass"
                },
                null
            ],
            "short_grass": [
                null,
                {
                    "display_name": "Short Grass",
                    "field": "cM",
                    "max_stack_size": 64,
                    "numeric_id": 194,
                    "text_id": "short_grass"
                }
            ]
        }
    },
    "language": {
        "block": {
            "minecraft.short_grass": [
                null,
                "Short Grass"
            ]
        },
        "download": [
            null,
            {
                "pack.progress.bytes": "Progress: %s (total size unknown)",
                "pack.progress.percent": "Progress: %s%%",
                "pack.title": "Downloading resource pack %s/%s"
            }
        ]
    },
    "packets": {
        "packet": {
            "CONFIGURATION_CLIENTBOUND_06": [
                {
                    "class": "xl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "CONFIGURATION"
                },
                {
                    "class": "xn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.isPresent()",
                            "instructions": [
                                {
                                    "field": "a.get()",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_07": [
                {
                    "class": "yt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ahd",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "CONFIGURATION"
                },
                {
                    "class": "xo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "f != null",
                            "instructions": [
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_08": [
                {
                    "class": "xm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<ahc, ast$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<ahd, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "CONFIGURATION"
                },
                {
                    "class": "yw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ahg",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_09": [
                null,
                {
                    "class": "xp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<ahf, asy$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<ahg, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_SERVERBOUND_05": [
                {
                    "class": "xs.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "CONFIGURATION"
                },
                {
                    "class": "xv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "PLAY_CLIENTBOUND_43": [
                {
                    "class": "xl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "a.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.isPresent()",
                            "instructions": [
                                {
                                    "field": "a.get()",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_44": [
                {
                    "class": "abi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "d.a.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d.b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d.c",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "d.d.a()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "ctf.a(d.e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.h.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d.h.isPresent()",
                            "instructions": [
                                {
                                    "field": "d.h.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "d.h.get().b().a()",
                                    "operation": "write",
                                    "type": "varlong"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "d.i",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "f != null",
                            "instructions": [
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_45": [
                {
                    "class": "abj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "d.a.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d.b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d.c",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "d.d.a()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "ctl.a(d.e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.h.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d.h.isPresent()",
                            "instructions": [
                                {
                                    "field": "d.h.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "d.h.get().b().a()",
                                    "operation": "write",
                                    "type": "varlong"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "d.i",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_46": [
                {
                    "class": "abk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(((long)cwj.i(d[var2])) << 0xc) | ((long)c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_47": [
                {
                    "class": "abl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(((long)cwp.i(d[var2])) << 0xc) | ((long)c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_48": [
                {
                    "class": "abm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_49": [
                {
                    "class": "abn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4A": [
                {
                    "class": "abo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4B": [
                {
                    "class": "abp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4C": [
                {
                    "class": "abq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4D": [
                {
                    "class": "abr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_51": [
                {
                    "class": "abv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_52": [
                {
                    "class": "abw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aby.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_53": [
                {
                    "class": "abx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_54": [
                {
                    "class": "aby.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "state": "PLAY"
                },
                {
                    "class": "aca.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_55": [
                {
                    "class": "abz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((agm$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "agl.b(var3.b)",
                                    "var": "var2"
                                },
                                {
                                    "field": "var3.a",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var2",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, var3.c",
                                    "field": "var3.b",
                                    "method": "a(Lug;Ljava/lang/Object;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "agk",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "0xff",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_56": [
                {
                    "class": "aca.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((agp$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "ago.b(var3.b)",
                                    "var": "var2"
                                },
                                {
                                    "field": "var3.a",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var2",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, var3.c",
                                    "field": "var3.b",
                                    "method": "a(Lui;Ljava/lang/Object;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "agn",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "0xff",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_57": [
                {
                    "class": "acb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_58": [
                {
                    "class": "acc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((blu)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "(cmr)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ace.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_59": [
                {
                    "class": "acd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((blz)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "(cmx)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5A": [
                {
                    "class": "ace.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5B": [
                {
                    "class": "acf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "g != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "g != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "this.g.a()",
                                            "var": "var2"
                                        },
                                        {
                                            "field": "kd.ar.getId(var2)",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "args": "packetbuffer, this.g",
                                            "field": "var2",
                                            "method": "a(Lug;Lwt;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "wu",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ach.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5C": [
                {
                    "class": "acg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aci.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "g != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "g != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "this.g.a()",
                                            "var": "var2"
                                        },
                                        {
                                            "field": "kd.ar.getId(var2)",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "args": "packetbuffer, this.g",
                                            "field": "var2",
                                            "method": "a(Lui;Lwv;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "ww",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5D": [
                {
                    "class": "ach.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "ach.b(h)",
                            "instructions": [
                                {
                                    "field": "((ach$b)k.orElseThrow(ach::h)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((ach$b)k.orElseThrow(ach::h)).g",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "((ach$b)k.orElseThrow(ach::h)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((ach$b)k.orElseThrow(ach::h)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((ach$b)k.orElseThrow(ach::h)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((ach$b)k.orElseThrow(ach::h)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((ach$b)k.orElseThrow(ach::h)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "ach.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5E": [
                {
                    "class": "aci.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.e.a()",
                                    "var": "var2"
                                },
                                {
                                    "field": "kd.ar.getId(var2)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, this.e",
                                    "field": "var2",
                                    "method": "a(Lug;Lwt;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "wu",
                                    "type": "interface"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ack.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "ack.b(h)",
                            "instructions": [
                                {
                                    "field": "((ack$b)k.orElseThrow(ack::h)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((ack$b)k.orElseThrow(ack::h)).g",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "((ack$b)k.orElseThrow(ack::h)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((ack$b)k.orElseThrow(ack::h)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((ack$b)k.orElseThrow(ack::h)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((ack$b)k.orElseThrow(ack::h)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((ack$b)k.orElseThrow(ack::h)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "ack.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5F": [
                {
                    "class": "acj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 95,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.e.a()",
                                    "var": "var2"
                                },
                                {
                                    "field": "kd.ar.getId(var2)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, this.e",
                                    "field": "var2",
                                    "method": "a(Lui;Lwv;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "ww",
                                    "type": "interface"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_60": [
                {
                    "class": "ack.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_61": [
                {
                    "class": "acl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_62": [
                {
                    "class": "acm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aco.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_63": [
                {
                    "class": "acn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_64": [
                {
                    "class": "aco.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "kd.b.t().getId(a) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "a.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "a.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "a.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_65": [
                {
                    "class": "acp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "b.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "kd.b.t().getId(b) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "b.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "b.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "b.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "kd.b.t().getId(a) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "a.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "a.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "a.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_66": [
                {
                    "class": "acq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [],
                    "state": "PLAY"
                },
                {
                    "class": "acs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "field": "b.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "kd.b.t().getId(b) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "b.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "b.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "b.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_67": [
                {
                    "class": "acr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 103,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "varint"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "act.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 103,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_68": [
                {
                    "class": "acs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 104,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 104,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "varint"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_69": [
                {
                    "class": "act.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 105,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 105,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6A": [
                {
                    "class": "acu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 106,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "b == null",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "sn.b",
                                    "var": "this.b"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 106,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6B": [
                {
                    "class": "acv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 107,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 107,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "b == null",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "sp.b",
                                    "var": "this.b"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6C": [
                {
                    "class": "acw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 108,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 108,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6D": [
                {
                    "class": "acx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 109,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 109,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6E": [
                {
                    "class": "acy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 110,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ada.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 110,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6F": [
                {
                    "class": "acz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 111,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "af",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b.b.isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.b.b.isPresent()",
                                    "instructions": [
                                        {
                                            "field": "itv.b.b.get()",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.b.c.isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.b.c.isPresent()",
                                    "instructions": [
                                        {
                                            "field": "itv.b.c.get().b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.b.c.get().c",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.b.c.get().d",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.b.c.get().f",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.b.c.get().e.isPresent()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.b.c.get().g",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.b.c.get().i",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "itv.b.c.get().j",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.b.c.get().k",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.b.f.c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.b.f.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.util.List",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "java.lang.String",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "string"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.b.g",
                                    "operation": "write",
                                    "type": "boolean"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ahd",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<ahd, ah>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ao>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "itv.getValue().a != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().a != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().a.toEpochMilli()",
                                                    "operation": "write",
                                                    "type": "varlong"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "adb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 111,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_70": [
                {
                    "class": "ada.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 112,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ada$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "kd.u.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "position"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "bnj",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "position"
                                        },
                                        {
                                            "field": "itv.b().a()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "adc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 112,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "af",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b.b.isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.b.b.isPresent()",
                                    "instructions": [
                                        {
                                            "field": "itv.b.b.get()",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.b.c.isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.b.c.isPresent()",
                                    "instructions": [
                                        {
                                            "field": "itv.b.c.get().b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.b.c.get().c",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.b.c.get().d",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.b.c.get().f",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.b.c.get().e.isPresent()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.b.c.get().g",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.b.c.get().i",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "itv.b.c.get().j",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.b.c.get().k",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.b.f.c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.b.f.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.util.List",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "java.lang.String",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "string"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.b.g",
                                    "operation": "write",
                                    "type": "boolean"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "ahg",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<ahg, ah>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ao>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "itv.getValue().a != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().a != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().a.toEpochMilli()",
                                                    "operation": "write",
                                                    "type": "varlong"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_71": [
                {
                    "class": "adb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 113,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "kd.d.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i != null",
                            "instructions": [
                                {
                                    "field": "blc$a.a.encode(sz.a, i)",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "add.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 113,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "add$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "kd.u.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "position"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "bno",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "position"
                                        },
                                        {
                                            "field": "itv.b().a()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_72": [
                {
                    "class": "adc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 114,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cpx",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "kd.t.b(itv.b().ar_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv.b()",
                                    "field": "itv.b().ar_()",
                                    "method": "a(Lug;Lcpv;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "cpz",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ade.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 114,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "kd.d.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i != null",
                            "instructions": [
                                {
                                    "field": "blh$a.a.encode(tb.a, i)",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_73": [
                {
                    "class": "xm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 115,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<ahc, ast$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<ahd, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "adf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 115,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cqd",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "kd.t.b(itv.b().ar_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv.b()",
                                    "field": "itv.b().ar_()",
                                    "method": "a(Lui;Lcqb;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "cqf",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_74": [
                null,
                {
                    "class": "xp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 116,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<ahf, asy$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<ahg, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_28": [
                {
                    "class": "xs.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ]
        }
    },
    "pluginchannels": {},
    "recipes": {},
    "sounds": {},
    "stats": {},
    "tags": {
        "blocks/enchantment_power_transmitter": [
            {
                "name": "enchantment_power_transmitter",
                "type": "blocks",
                "values": [
                    "minecraft:air",
                    "minecraft:water",
                    "minecraft:lava",
                    "minecraft:grass",
                    "minecraft:fern",
                    "minecraft:dead_bush",
                    "minecraft:seagrass",
                    "minecraft:tall_seagrass",
                    "minecraft:fire",
                    "minecraft:soul_fire",
                    "minecraft:snow",
                    "minecraft:vine",
                    "minecraft:glow_lichen",
                    "minecraft:light",
                    "minecraft:tall_grass",
                    "minecraft:large_fern",
                    "minecraft:structure_void",
                    "minecraft:void_air",
                    "minecraft:cave_air",
                    "minecraft:bubble_column",
                    "minecraft:warped_roots",
                    "minecraft:nether_sprouts",
                    "minecraft:crimson_roots",
                    "minecraft:hanging_roots"
                ]
            },
            {
                "name": "enchantment_power_transmitter",
                "type": "blocks",
                "values": [
                    "minecraft:air",
                    "minecraft:water",
                    "minecraft:lava",
                    "minecraft:short_grass",
                    "minecraft:fern",
                    "minecraft:dead_bush",
                    "minecraft:seagrass",
                    "minecraft:tall_seagrass",
                    "minecraft:fire",
                    "minecraft:soul_fire",
                    "minecraft:snow",
                    "minecraft:vine",
                    "minecraft:glow_lichen",
                    "minecraft:light",
                    "minecraft:tall_grass",
                    "minecraft:large_fern",
                    "minecraft:structure_void",
                    "minecraft:void_air",
                    "minecraft:cave_air",
                    "minecraft:bubble_column",
                    "minecraft:warped_roots",
                    "minecraft:nether_sprouts",
                    "minecraft:crimson_roots",
                    "minecraft:hanging_roots"
                ]
            }
        ],
        "blocks/mineable/axe": [
            {
                "name": "mineable/axe",
                "type": "blocks",
                "values": [
                    "minecraft:note_block",
                    "minecraft:attached_melon_stem",
                    "minecraft:attached_pumpkin_stem",
                    "minecraft:azalea",
                    "minecraft:bamboo",
                    "minecraft:barrel",
                    "minecraft:bee_nest",
                    "minecraft:beehive",
                    "minecraft:beetroots",
                    "minecraft:big_dripleaf_stem",
                    "minecraft:big_dripleaf",
                    "minecraft:bookshelf",
                    "minecraft:brown_mushroom_block",
                    "minecraft:brown_mushroom",
                    "minecraft:campfire",
                    "minecraft:carrots",
                    "minecraft:cartography_table",
                    "minecraft:carved_pumpkin",
                    "minecraft:cave_vines_plant",
                    "minecraft:cave_vines",
                    "minecraft:chest",
                    "minecraft:chorus_flower",
                    "minecraft:chorus_plant",
                    "minecraft:cocoa",
                    "minecraft:composter",
                    "minecraft:crafting_table",
                    "minecraft:crimson_fungus",
                    "minecraft:daylight_detector",
                    "minecraft:dead_bush",
                    "minecraft:fern",
                    "minecraft:fletching_table",
                    "minecraft:glow_lichen",
                    "minecraft:grass",
                    "minecraft:hanging_roots",
                    "minecraft:jack_o_lantern",
                    "minecraft:jukebox",
                    "minecraft:ladder",
                    "minecraft:large_fern",
                    "minecraft:lectern",
                    "minecraft:lily_pad",
                    "minecraft:loom",
                    "minecraft:melon_stem",
                    "minecraft:melon",
                    "minecraft:mushroom_stem",
                    "minecraft:nether_wart",
                    "minecraft:potatoes",
                    "minecraft:pumpkin_stem",
                    "minecraft:pumpkin",
                    "minecraft:red_mushroom_block",
                    "minecraft:red_mushroom",
                    "minecraft:scaffolding",
                    "minecraft:small_dripleaf",
                    "minecraft:smithing_table",
                    "minecraft:soul_campfire",
                    "minecraft:spore_blossom",
                    "minecraft:sugar_cane",
                    "minecraft:sweet_berry_bush",
                    "minecraft:tall_grass",
                    "minecraft:trapped_chest",
                    "minecraft:twisting_vines_plant",
                    "minecraft:twisting_vines",
                    "minecraft:vine",
                    "minecraft:warped_fungus",
                    "minecraft:weeping_vines_plant",
                    "minecraft:weeping_vines",
                    "minecraft:wheat",
                    "minecraft:white_banner",
                    "minecraft:orange_banner",
                    "minecraft:magenta_banner",
                    "minecraft:light_blue_banner",
                    "minecraft:yellow_banner",
                    "minecraft:lime_banner",
                    "minecraft:pink_banner",
                    "minecraft:gray_banner",
                    "minecraft:light_gray_banner",
                    "minecraft:cyan_banner",
                    "minecraft:purple_banner",
                    "minecraft:blue_banner",
                    "minecraft:brown_banner",
                    "minecraft:green_banner",
                    "minecraft:red_banner",
                    "minecraft:black_banner",
                    "minecraft:white_wall_banner",
                    "minecraft:orange_wall_banner",
                    "minecraft:magenta_wall_banner",
                    "minecraft:light_blue_wall_banner",
                    "minecraft:yellow_wall_banner",
                    "minecraft:lime_wall_banner",
                    "minecraft:pink_wall_banner",
                    "minecraft:gray_wall_banner",
                    "minecraft:light_gray_wall_banner",
                    "minecraft:cyan_wall_banner",
                    "minecraft:purple_wall_banner",
                    "minecraft:blue_wall_banner",
                    "minecraft:brown_wall_banner",
                    "minecraft:green_wall_banner",
                    "minecraft:red_wall_banner",
                    "minecraft:black_wall_banner",
                    "minecraft:acacia_fence_gate",
                    "minecraft:birch_fence_gate",
                    "minecraft:dark_oak_fence_gate",
                    "minecraft:jungle_fence_gate",
                    "minecraft:oak_fence_gate",
                    "minecraft:spruce_fence_gate",
                    "minecraft:crimson_fence_gate",
                    "minecraft:warped_fence_gate",
                    "minecraft:mangrove_fence_gate",
                    "minecraft:bamboo_fence_gate",
                    "minecraft:cherry_fence_gate",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:cherry_log",
                    "minecraft:cherry_wood",
                    "minecraft:stripped_cherry_log",
                    "minecraft:stripped_cherry_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:oak_planks",
                    "minecraft:spruce_planks",
                    "minecraft:birch_planks",
                    "minecraft:jungle_planks",
                    "minecraft:acacia_planks",
                    "minecraft:dark_oak_planks",
                    "minecraft:crimson_planks",
                    "minecraft:warped_planks",
                    "minecraft:mangrove_planks",
                    "minecraft:bamboo_planks",
                    "minecraft:cherry_planks",
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling",
                    "minecraft:azalea",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule",
                    "minecraft:cherry_sapling",
                    "minecraft:oak_sign",
                    "minecraft:spruce_sign",
                    "minecraft:birch_sign",
                    "minecraft:acacia_sign",
                    "minecraft:jungle_sign",
                    "minecraft:dark_oak_sign",
                    "minecraft:crimson_sign",
                    "minecraft:warped_sign",
                    "minecraft:mangrove_sign",
                    "minecraft:bamboo_sign",
                    "minecraft:cherry_sign",
                    "minecraft:oak_wall_sign",
                    "minecraft:spruce_wall_sign",
                    "minecraft:birch_wall_sign",
                    "minecraft:acacia_wall_sign",
                    "minecraft:jungle_wall_sign",
                    "minecraft:dark_oak_wall_sign",
                    "minecraft:crimson_wall_sign",
                    "minecraft:warped_wall_sign",
                    "minecraft:mangrove_wall_sign",
                    "minecraft:bamboo_wall_sign",
                    "minecraft:cherry_wall_sign",
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:mangrove_button",
                    "minecraft:bamboo_button",
                    "minecraft:cherry_button",
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:mangrove_door",
                    "minecraft:bamboo_door",
                    "minecraft:cherry_door",
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:mangrove_fence",
                    "minecraft:bamboo_fence",
                    "minecraft:cherry_fence",
                    "minecraft:oak_pressure_plate",
                    "minecraft:spruce_pressure_plate",
                    "minecraft:birch_pressure_plate",
                    "minecraft:jungle_pressure_plate",
                    "minecraft:acacia_pressure_plate",
                    "minecraft:dark_oak_pressure_plate",
                    "minecraft:crimson_pressure_plate",
                    "minecraft:warped_pressure_plate",
                    "minecraft:mangrove_pressure_plate",
                    "minecraft:bamboo_pressure_plate",
                    "minecraft:cherry_pressure_plate",
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:mangrove_slab",
                    "minecraft:bamboo_slab",
                    "minecraft:cherry_slab",
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:mangrove_stairs",
                    "minecraft:bamboo_stairs",
                    "minecraft:cherry_stairs",
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:mangrove_trapdoor",
                    "minecraft:bamboo_trapdoor",
                    "minecraft:cherry_trapdoor",
                    "minecraft:mangrove_roots",
                    "minecraft:oak_hanging_sign",
                    "minecraft:spruce_hanging_sign",
                    "minecraft:birch_hanging_sign",
                    "minecraft:acacia_hanging_sign",
                    "minecraft:cherry_hanging_sign",
                    "minecraft:jungle_hanging_sign",
                    "minecraft:dark_oak_hanging_sign",
                    "minecraft:crimson_hanging_sign",
                    "minecraft:warped_hanging_sign",
                    "minecraft:mangrove_hanging_sign",
                    "minecraft:bamboo_hanging_sign",
                    "minecraft:oak_wall_hanging_sign",
                    "minecraft:spruce_wall_hanging_sign",
                    "minecraft:birch_wall_hanging_sign",
                    "minecraft:acacia_wall_hanging_sign",
                    "minecraft:cherry_wall_hanging_sign",
                    "minecraft:jungle_wall_hanging_sign",
                    "minecraft:dark_oak_wall_hanging_sign",
                    "minecraft:crimson_wall_hanging_sign",
                    "minecraft:warped_wall_hanging_sign",
                    "minecraft:mangrove_wall_hanging_sign",
                    "minecraft:bamboo_wall_hanging_sign",
                    "minecraft:bamboo_mosaic",
                    "minecraft:bamboo_mosaic_slab",
                    "minecraft:bamboo_mosaic_stairs",
                    "minecraft:bamboo_block",
                    "minecraft:stripped_bamboo_block",
                    "minecraft:chiseled_bookshelf"
                ]
            },
            {
                "name": "mineable/axe",
                "type": "blocks",
                "values": [
                    "minecraft:note_block",
                    "minecraft:attached_melon_stem",
                    "minecraft:attached_pumpkin_stem",
                    "minecraft:azalea",
                    "minecraft:bamboo",
                    "minecraft:barrel",
                    "minecraft:bee_nest",
                    "minecraft:beehive",
                    "minecraft:beetroots",
                    "minecraft:big_dripleaf_stem",
                    "minecraft:big_dripleaf",
                    "minecraft:bookshelf",
                    "minecraft:brown_mushroom_block",
                    "minecraft:brown_mushroom",
                    "minecraft:campfire",
                    "minecraft:carrots",
                    "minecraft:cartography_table",
                    "minecraft:carved_pumpkin",
                    "minecraft:cave_vines_plant",
                    "minecraft:cave_vines",
                    "minecraft:chest",
                    "minecraft:chorus_flower",
                    "minecraft:chorus_plant",
                    "minecraft:cocoa",
                    "minecraft:composter",
                    "minecraft:crafting_table",
                    "minecraft:crimson_fungus",
                    "minecraft:daylight_detector",
                    "minecraft:dead_bush",
                    "minecraft:fern",
                    "minecraft:fletching_table",
                    "minecraft:glow_lichen",
                    "minecraft:short_grass",
                    "minecraft:hanging_roots",
                    "minecraft:jack_o_lantern",
                    "minecraft:jukebox",
                    "minecraft:ladder",
                    "minecraft:large_fern",
                    "minecraft:lectern",
                    "minecraft:lily_pad",
                    "minecraft:loom",
                    "minecraft:melon_stem",
                    "minecraft:melon",
                    "minecraft:mushroom_stem",
                    "minecraft:nether_wart",
                    "minecraft:potatoes",
                    "minecraft:pumpkin_stem",
                    "minecraft:pumpkin",
                    "minecraft:red_mushroom_block",
                    "minecraft:red_mushroom",
                    "minecraft:scaffolding",
                    "minecraft:small_dripleaf",
                    "minecraft:smithing_table",
                    "minecraft:soul_campfire",
                    "minecraft:spore_blossom",
                    "minecraft:sugar_cane",
                    "minecraft:sweet_berry_bush",
                    "minecraft:tall_grass",
                    "minecraft:trapped_chest",
                    "minecraft:twisting_vines_plant",
                    "minecraft:twisting_vines",
                    "minecraft:vine",
                    "minecraft:warped_fungus",
                    "minecraft:weeping_vines_plant",
                    "minecraft:weeping_vines",
                    "minecraft:wheat",
                    "minecraft:white_banner",
                    "minecraft:orange_banner",
                    "minecraft:magenta_banner",
                    "minecraft:light_blue_banner",
                    "minecraft:yellow_banner",
                    "minecraft:lime_banner",
                    "minecraft:pink_banner",
                    "minecraft:gray_banner",
                    "minecraft:light_gray_banner",
                    "minecraft:cyan_banner",
                    "minecraft:purple_banner",
                    "minecraft:blue_banner",
                    "minecraft:brown_banner",
                    "minecraft:green_banner",
                    "minecraft:red_banner",
                    "minecraft:black_banner",
                    "minecraft:white_wall_banner",
                    "minecraft:orange_wall_banner",
                    "minecraft:magenta_wall_banner",
                    "minecraft:light_blue_wall_banner",
                    "minecraft:yellow_wall_banner",
                    "minecraft:lime_wall_banner",
                    "minecraft:pink_wall_banner",
                    "minecraft:gray_wall_banner",
                    "minecraft:light_gray_wall_banner",
                    "minecraft:cyan_wall_banner",
                    "minecraft:purple_wall_banner",
                    "minecraft:blue_wall_banner",
                    "minecraft:brown_wall_banner",
                    "minecraft:green_wall_banner",
                    "minecraft:red_wall_banner",
                    "minecraft:black_wall_banner",
                    "minecraft:acacia_fence_gate",
                    "minecraft:birch_fence_gate",
                    "minecraft:dark_oak_fence_gate",
                    "minecraft:jungle_fence_gate",
                    "minecraft:oak_fence_gate",
                    "minecraft:spruce_fence_gate",
                    "minecraft:crimson_fence_gate",
                    "minecraft:warped_fence_gate",
                    "minecraft:mangrove_fence_gate",
                    "minecraft:bamboo_fence_gate",
                    "minecraft:cherry_fence_gate",
                    "minecraft:dark_oak_log",
                    "minecraft:dark_oak_wood",
                    "minecraft:stripped_dark_oak_log",
                    "minecraft:stripped_dark_oak_wood",
                    "minecraft:oak_log",
                    "minecraft:oak_wood",
                    "minecraft:stripped_oak_log",
                    "minecraft:stripped_oak_wood",
                    "minecraft:acacia_log",
                    "minecraft:acacia_wood",
                    "minecraft:stripped_acacia_log",
                    "minecraft:stripped_acacia_wood",
                    "minecraft:birch_log",
                    "minecraft:birch_wood",
                    "minecraft:stripped_birch_log",
                    "minecraft:stripped_birch_wood",
                    "minecraft:jungle_log",
                    "minecraft:jungle_wood",
                    "minecraft:stripped_jungle_log",
                    "minecraft:stripped_jungle_wood",
                    "minecraft:spruce_log",
                    "minecraft:spruce_wood",
                    "minecraft:stripped_spruce_log",
                    "minecraft:stripped_spruce_wood",
                    "minecraft:mangrove_log",
                    "minecraft:mangrove_wood",
                    "minecraft:stripped_mangrove_log",
                    "minecraft:stripped_mangrove_wood",
                    "minecraft:cherry_log",
                    "minecraft:cherry_wood",
                    "minecraft:stripped_cherry_log",
                    "minecraft:stripped_cherry_wood",
                    "minecraft:crimson_stem",
                    "minecraft:stripped_crimson_stem",
                    "minecraft:crimson_hyphae",
                    "minecraft:stripped_crimson_hyphae",
                    "minecraft:warped_stem",
                    "minecraft:stripped_warped_stem",
                    "minecraft:warped_hyphae",
                    "minecraft:stripped_warped_hyphae",
                    "minecraft:oak_planks",
                    "minecraft:spruce_planks",
                    "minecraft:birch_planks",
                    "minecraft:jungle_planks",
                    "minecraft:acacia_planks",
                    "minecraft:dark_oak_planks",
                    "minecraft:crimson_planks",
                    "minecraft:warped_planks",
                    "minecraft:mangrove_planks",
                    "minecraft:bamboo_planks",
                    "minecraft:cherry_planks",
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling",
                    "minecraft:azalea",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule",
                    "minecraft:cherry_sapling",
                    "minecraft:oak_sign",
                    "minecraft:spruce_sign",
                    "minecraft:birch_sign",
                    "minecraft:acacia_sign",
                    "minecraft:jungle_sign",
                    "minecraft:dark_oak_sign",
                    "minecraft:crimson_sign",
                    "minecraft:warped_sign",
                    "minecraft:mangrove_sign",
                    "minecraft:bamboo_sign",
                    "minecraft:cherry_sign",
                    "minecraft:oak_wall_sign",
                    "minecraft:spruce_wall_sign",
                    "minecraft:birch_wall_sign",
                    "minecraft:acacia_wall_sign",
                    "minecraft:jungle_wall_sign",
                    "minecraft:dark_oak_wall_sign",
                    "minecraft:crimson_wall_sign",
                    "minecraft:warped_wall_sign",
                    "minecraft:mangrove_wall_sign",
                    "minecraft:bamboo_wall_sign",
                    "minecraft:cherry_wall_sign",
                    "minecraft:oak_button",
                    "minecraft:spruce_button",
                    "minecraft:birch_button",
                    "minecraft:jungle_button",
                    "minecraft:acacia_button",
                    "minecraft:dark_oak_button",
                    "minecraft:crimson_button",
                    "minecraft:warped_button",
                    "minecraft:mangrove_button",
                    "minecraft:bamboo_button",
                    "minecraft:cherry_button",
                    "minecraft:oak_door",
                    "minecraft:spruce_door",
                    "minecraft:birch_door",
                    "minecraft:jungle_door",
                    "minecraft:acacia_door",
                    "minecraft:dark_oak_door",
                    "minecraft:crimson_door",
                    "minecraft:warped_door",
                    "minecraft:mangrove_door",
                    "minecraft:bamboo_door",
                    "minecraft:cherry_door",
                    "minecraft:oak_fence",
                    "minecraft:acacia_fence",
                    "minecraft:dark_oak_fence",
                    "minecraft:spruce_fence",
                    "minecraft:birch_fence",
                    "minecraft:jungle_fence",
                    "minecraft:crimson_fence",
                    "minecraft:warped_fence",
                    "minecraft:mangrove_fence",
                    "minecraft:bamboo_fence",
                    "minecraft:cherry_fence",
                    "minecraft:oak_pressure_plate",
                    "minecraft:spruce_pressure_plate",
                    "minecraft:birch_pressure_plate",
                    "minecraft:jungle_pressure_plate",
                    "minecraft:acacia_pressure_plate",
                    "minecraft:dark_oak_pressure_plate",
                    "minecraft:crimson_pressure_plate",
                    "minecraft:warped_pressure_plate",
                    "minecraft:mangrove_pressure_plate",
                    "minecraft:bamboo_pressure_plate",
                    "minecraft:cherry_pressure_plate",
                    "minecraft:oak_slab",
                    "minecraft:spruce_slab",
                    "minecraft:birch_slab",
                    "minecraft:jungle_slab",
                    "minecraft:acacia_slab",
                    "minecraft:dark_oak_slab",
                    "minecraft:crimson_slab",
                    "minecraft:warped_slab",
                    "minecraft:mangrove_slab",
                    "minecraft:bamboo_slab",
                    "minecraft:cherry_slab",
                    "minecraft:oak_stairs",
                    "minecraft:spruce_stairs",
                    "minecraft:birch_stairs",
                    "minecraft:jungle_stairs",
                    "minecraft:acacia_stairs",
                    "minecraft:dark_oak_stairs",
                    "minecraft:crimson_stairs",
                    "minecraft:warped_stairs",
                    "minecraft:mangrove_stairs",
                    "minecraft:bamboo_stairs",
                    "minecraft:cherry_stairs",
                    "minecraft:acacia_trapdoor",
                    "minecraft:birch_trapdoor",
                    "minecraft:dark_oak_trapdoor",
                    "minecraft:jungle_trapdoor",
                    "minecraft:oak_trapdoor",
                    "minecraft:spruce_trapdoor",
                    "minecraft:crimson_trapdoor",
                    "minecraft:warped_trapdoor",
                    "minecraft:mangrove_trapdoor",
                    "minecraft:bamboo_trapdoor",
                    "minecraft:cherry_trapdoor",
                    "minecraft:mangrove_roots",
                    "minecraft:oak_hanging_sign",
                    "minecraft:spruce_hanging_sign",
                    "minecraft:birch_hanging_sign",
                    "minecraft:acacia_hanging_sign",
                    "minecraft:cherry_hanging_sign",
                    "minecraft:jungle_hanging_sign",
                    "minecraft:dark_oak_hanging_sign",
                    "minecraft:crimson_hanging_sign",
                    "minecraft:warped_hanging_sign",
                    "minecraft:mangrove_hanging_sign",
                    "minecraft:bamboo_hanging_sign",
                    "minecraft:oak_wall_hanging_sign",
                    "minecraft:spruce_wall_hanging_sign",
                    "minecraft:birch_wall_hanging_sign",
                    "minecraft:acacia_wall_hanging_sign",
                    "minecraft:cherry_wall_hanging_sign",
                    "minecraft:jungle_wall_hanging_sign",
                    "minecraft:dark_oak_wall_hanging_sign",
                    "minecraft:crimson_wall_hanging_sign",
                    "minecraft:warped_wall_hanging_sign",
                    "minecraft:mangrove_wall_hanging_sign",
                    "minecraft:bamboo_wall_hanging_sign",
                    "minecraft:bamboo_mosaic",
                    "minecraft:bamboo_mosaic_slab",
                    "minecraft:bamboo_mosaic_stairs",
                    "minecraft:bamboo_block",
                    "minecraft:stripped_bamboo_block",
                    "minecraft:chiseled_bookshelf"
                ]
            }
        ],
        "blocks/replaceable": [
            {
                "name": "replaceable",
                "type": "blocks",
                "values": [
                    "minecraft:air",
                    "minecraft:water",
                    "minecraft:lava",
                    "minecraft:grass",
                    "minecraft:fern",
                    "minecraft:dead_bush",
                    "minecraft:seagrass",
                    "minecraft:tall_seagrass",
                    "minecraft:fire",
                    "minecraft:soul_fire",
                    "minecraft:snow",
                    "minecraft:vine",
                    "minecraft:glow_lichen",
                    "minecraft:light",
                    "minecraft:tall_grass",
                    "minecraft:large_fern",
                    "minecraft:structure_void",
                    "minecraft:void_air",
                    "minecraft:cave_air",
                    "minecraft:bubble_column",
                    "minecraft:warped_roots",
                    "minecraft:nether_sprouts",
                    "minecraft:crimson_roots",
                    "minecraft:hanging_roots"
                ]
            },
            {
                "name": "replaceable",
                "type": "blocks",
                "values": [
                    "minecraft:air",
                    "minecraft:water",
                    "minecraft:lava",
                    "minecraft:short_grass",
                    "minecraft:fern",
                    "minecraft:dead_bush",
                    "minecraft:seagrass",
                    "minecraft:tall_seagrass",
                    "minecraft:fire",
                    "minecraft:soul_fire",
                    "minecraft:snow",
                    "minecraft:vine",
                    "minecraft:glow_lichen",
                    "minecraft:light",
                    "minecraft:tall_grass",
                    "minecraft:large_fern",
                    "minecraft:structure_void",
                    "minecraft:void_air",
                    "minecraft:cave_air",
                    "minecraft:bubble_column",
                    "minecraft:warped_roots",
                    "minecraft:nether_sprouts",
                    "minecraft:crimson_roots",
                    "minecraft:hanging_roots"
                ]
            }
        ],
        "blocks/replaceable_by_trees": [
            {
                "name": "replaceable_by_trees",
                "type": "blocks",
                "values": [
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves",
                    "minecraft:cherry_leaves",
                    "minecraft:grass",
                    "minecraft:fern",
                    "minecraft:dead_bush",
                    "minecraft:vine",
                    "minecraft:glow_lichen",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:rose_bush",
                    "minecraft:peony",
                    "minecraft:tall_grass",
                    "minecraft:large_fern",
                    "minecraft:hanging_roots",
                    "minecraft:pitcher_plant",
                    "minecraft:water",
                    "minecraft:seagrass",
                    "minecraft:tall_seagrass",
                    "minecraft:warped_roots",
                    "minecraft:nether_sprouts",
                    "minecraft:crimson_roots"
                ]
            },
            {
                "name": "replaceable_by_trees",
                "type": "blocks",
                "values": [
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves",
                    "minecraft:cherry_leaves",
                    "minecraft:short_grass",
                    "minecraft:fern",
                    "minecraft:dead_bush",
                    "minecraft:vine",
                    "minecraft:glow_lichen",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:rose_bush",
                    "minecraft:peony",
                    "minecraft:tall_grass",
                    "minecraft:large_fern",
                    "minecraft:hanging_roots",
                    "minecraft:pitcher_plant",
                    "minecraft:water",
                    "minecraft:seagrass",
                    "minecraft:tall_seagrass",
                    "minecraft:warped_roots",
                    "minecraft:nether_sprouts",
                    "minecraft:crimson_roots"
                ]
            }
        ],
        "blocks/sword_efficient": [
            {
                "name": "sword_efficient",
                "type": "blocks",
                "values": [
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves",
                    "minecraft:cherry_leaves",
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling",
                    "minecraft:azalea",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule",
                    "minecraft:cherry_sapling",
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:torchflower",
                    "minecraft:beetroots",
                    "minecraft:carrots",
                    "minecraft:potatoes",
                    "minecraft:wheat",
                    "minecraft:melon_stem",
                    "minecraft:pumpkin_stem",
                    "minecraft:torchflower_crop",
                    "minecraft:pitcher_crop",
                    "minecraft:grass",
                    "minecraft:fern",
                    "minecraft:dead_bush",
                    "minecraft:vine",
                    "minecraft:glow_lichen",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:rose_bush",
                    "minecraft:peony",
                    "minecraft:tall_grass",
                    "minecraft:large_fern",
                    "minecraft:hanging_roots",
                    "minecraft:pitcher_plant",
                    "minecraft:brown_mushroom",
                    "minecraft:red_mushroom",
                    "minecraft:sugar_cane",
                    "minecraft:pumpkin",
                    "minecraft:carved_pumpkin",
                    "minecraft:jack_o_lantern",
                    "minecraft:melon",
                    "minecraft:attached_pumpkin_stem",
                    "minecraft:attached_melon_stem",
                    "minecraft:lily_pad",
                    "minecraft:cocoa",
                    "minecraft:pitcher_crop",
                    "minecraft:sweet_berry_bush",
                    "minecraft:cave_vines",
                    "minecraft:cave_vines_plant",
                    "minecraft:spore_blossom",
                    "minecraft:moss_carpet",
                    "minecraft:pink_petals",
                    "minecraft:big_dripleaf",
                    "minecraft:big_dripleaf_stem",
                    "minecraft:small_dripleaf",
                    "minecraft:nether_wart",
                    "minecraft:warped_fungus",
                    "minecraft:warped_roots",
                    "minecraft:nether_sprouts",
                    "minecraft:crimson_fungus",
                    "minecraft:weeping_vines",
                    "minecraft:weeping_vines_plant",
                    "minecraft:twisting_vines",
                    "minecraft:twisting_vines_plant",
                    "minecraft:crimson_roots",
                    "minecraft:chorus_plant",
                    "minecraft:chorus_flower"
                ]
            },
            {
                "name": "sword_efficient",
                "type": "blocks",
                "values": [
                    "minecraft:jungle_leaves",
                    "minecraft:oak_leaves",
                    "minecraft:spruce_leaves",
                    "minecraft:dark_oak_leaves",
                    "minecraft:acacia_leaves",
                    "minecraft:birch_leaves",
                    "minecraft:azalea_leaves",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:mangrove_leaves",
                    "minecraft:cherry_leaves",
                    "minecraft:oak_sapling",
                    "minecraft:spruce_sapling",
                    "minecraft:birch_sapling",
                    "minecraft:jungle_sapling",
                    "minecraft:acacia_sapling",
                    "minecraft:dark_oak_sapling",
                    "minecraft:azalea",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule",
                    "minecraft:cherry_sapling",
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:torchflower",
                    "minecraft:beetroots",
                    "minecraft:carrots",
                    "minecraft:potatoes",
                    "minecraft:wheat",
                    "minecraft:melon_stem",
                    "minecraft:pumpkin_stem",
                    "minecraft:torchflower_crop",
                    "minecraft:pitcher_crop",
                    "minecraft:short_grass",
                    "minecraft:fern",
                    "minecraft:dead_bush",
                    "minecraft:vine",
                    "minecraft:glow_lichen",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:rose_bush",
                    "minecraft:peony",
                    "minecraft:tall_grass",
                    "minecraft:large_fern",
                    "minecraft:hanging_roots",
                    "minecraft:pitcher_plant",
                    "minecraft:brown_mushroom",
                    "minecraft:red_mushroom",
                    "minecraft:sugar_cane",
                    "minecraft:pumpkin",
                    "minecraft:carved_pumpkin",
                    "minecraft:jack_o_lantern",
                    "minecraft:melon",
                    "minecraft:attached_pumpkin_stem",
                    "minecraft:attached_melon_stem",
                    "minecraft:lily_pad",
                    "minecraft:cocoa",
                    "minecraft:pitcher_crop",
                    "minecraft:sweet_berry_bush",
                    "minecraft:cave_vines",
                    "minecraft:cave_vines_plant",
                    "minecraft:spore_blossom",
                    "minecraft:moss_carpet",
                    "minecraft:pink_petals",
                    "minecraft:big_dripleaf",
                    "minecraft:big_dripleaf_stem",
                    "minecraft:small_dripleaf",
                    "minecraft:nether_wart",
                    "minecraft:warped_fungus",
                    "minecraft:warped_roots",
                    "minecraft:nether_sprouts",
                    "minecraft:crimson_fungus",
                    "minecraft:weeping_vines",
                    "minecraft:weeping_vines_plant",
                    "minecraft:twisting_vines",
                    "minecraft:twisting_vines_plant",
                    "minecraft:crimson_roots",
                    "minecraft:chorus_plant",
                    "minecraft:chorus_flower"
                ]
            }
        ]
    },
    "tileentity": {
        "tileentities": {}
    },
    "version": {
        "data": [
            3691,
            3693
        ],
        "id": [
            "23w46a",
            "1.20.3-pre1"
        ],
        "name": [
            "23w46a",
            "1.20.3 Pre-Release 1"
        ],
        "protocol": [
            1073741987,
            1073741988
        ]
    }
}