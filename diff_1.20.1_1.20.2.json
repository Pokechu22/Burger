{
    "achievements": {},
    "blocks": {
        "block": {
            "barrier": [
                {
                    "class": "cov",
                    "display_name": "Barrier",
                    "field": "hW",
                    "hardness": -1.0,
                    "max_state_id": 10225,
                    "min_state_id": 10225,
                    "num_states": 1,
                    "numeric_id": 464,
                    "resistance": 3600000.75,
                    "states": [],
                    "super": [
                        "cpn"
                    ],
                    "text_id": "barrier"
                },
                {
                    "class": "csd",
                    "display_name": "Barrier",
                    "field": "hW",
                    "hardness": -1.0,
                    "max_state_id": 10366,
                    "min_state_id": 10365,
                    "num_states": 2,
                    "numeric_id": 464,
                    "resistance": 3600000.75,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "waterlogged",
                            "num_values": 2,
                            "type": "bool"
                        }
                    ],
                    "super": [
                        "csv"
                    ],
                    "text_id": "barrier"
                }
            ],
            "creeper_head": [
                {
                    "block_entity": "skull",
                    "class": "cwp",
                    "display_name": "Creeper Head",
                    "field": "gM",
                    "hardness": 1.0,
                    "max_state_id": 8922,
                    "min_state_id": 8907,
                    "num_states": 16,
                    "numeric_id": 402,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "b",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "creeper_head"
                },
                {
                    "block_entity": "skull",
                    "class": "czx",
                    "display_name": "Creeper Head",
                    "field": "gM",
                    "hardness": 1.0,
                    "max_state_id": 9018,
                    "min_state_id": 8987,
                    "num_states": 32,
                    "numeric_id": 402,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "c",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "creeper_head"
                }
            ],
            "creeper_wall_head": [
                {
                    "block_entity": "skull",
                    "class": "cym",
                    "display_name": "Creeper Wall Head",
                    "field": "gN",
                    "hardness": 1.0,
                    "max_state_id": 8926,
                    "min_state_id": 8923,
                    "num_states": 4,
                    "numeric_id": 403,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "creeper_wall_head"
                },
                {
                    "block_entity": "skull",
                    "class": "dbu",
                    "display_name": "Creeper Wall Head",
                    "field": "gN",
                    "hardness": 1.0,
                    "max_state_id": 9026,
                    "min_state_id": 9019,
                    "num_states": 8,
                    "numeric_id": 403,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "b",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "creeper_wall_head"
                }
            ],
            "dragon_head": [
                {
                    "block_entity": "skull",
                    "class": "cwp",
                    "display_name": "Dragon Head",
                    "field": "gO",
                    "hardness": 1.0,
                    "max_state_id": 8942,
                    "min_state_id": 8927,
                    "num_states": 16,
                    "numeric_id": 404,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "b",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "dragon_head"
                },
                {
                    "block_entity": "skull",
                    "class": "czx",
                    "display_name": "Dragon Head",
                    "field": "gO",
                    "hardness": 1.0,
                    "max_state_id": 9058,
                    "min_state_id": 9027,
                    "num_states": 32,
                    "numeric_id": 404,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "c",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "dragon_head"
                }
            ],
            "dragon_wall_head": [
                {
                    "block_entity": "skull",
                    "class": "cym",
                    "display_name": "Dragon Wall Head",
                    "field": "gP",
                    "hardness": 1.0,
                    "max_state_id": 8946,
                    "min_state_id": 8943,
                    "num_states": 4,
                    "numeric_id": 405,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "dragon_wall_head"
                },
                {
                    "block_entity": "skull",
                    "class": "dbu",
                    "display_name": "Dragon Wall Head",
                    "field": "gP",
                    "hardness": 1.0,
                    "max_state_id": 9066,
                    "min_state_id": 9059,
                    "num_states": 8,
                    "numeric_id": 405,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "b",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "dragon_wall_head"
                }
            ],
            "piglin_head": [
                {
                    "block_entity": "skull",
                    "class": "cwp",
                    "display_name": "Piglin Head",
                    "field": "gQ",
                    "hardness": 1.0,
                    "max_state_id": 8962,
                    "min_state_id": 8947,
                    "num_states": 16,
                    "numeric_id": 406,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "b",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "piglin_head"
                },
                {
                    "block_entity": "skull",
                    "class": "czx",
                    "display_name": "Piglin Head",
                    "field": "gQ",
                    "hardness": 1.0,
                    "max_state_id": 9098,
                    "min_state_id": 9067,
                    "num_states": 32,
                    "numeric_id": 406,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "c",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "piglin_head"
                }
            ],
            "piglin_wall_head": [
                {
                    "block_entity": "skull",
                    "class": "cux",
                    "display_name": "Piglin Wall Head",
                    "field": "gR",
                    "hardness": 1.0,
                    "max_state_id": 8966,
                    "min_state_id": 8963,
                    "num_states": 4,
                    "numeric_id": 407,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "cym",
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "piglin_wall_head"
                },
                {
                    "block_entity": "skull",
                    "class": "cyf",
                    "display_name": "Piglin Wall Head",
                    "field": "gR",
                    "hardness": 1.0,
                    "max_state_id": 9106,
                    "min_state_id": 9099,
                    "num_states": 8,
                    "numeric_id": 407,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "b",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "dbu",
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "piglin_wall_head"
                }
            ],
            "player_head": [
                {
                    "block_entity": "skull",
                    "class": "cvb",
                    "display_name": "Player Head",
                    "field": "gK",
                    "hardness": 1.0,
                    "max_state_id": 8902,
                    "min_state_id": 8887,
                    "num_states": 16,
                    "numeric_id": 400,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "b",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "cwp",
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "player_head"
                },
                {
                    "block_entity": "skull",
                    "class": "cyj",
                    "display_name": "Player Head",
                    "field": "gK",
                    "hardness": 1.0,
                    "max_state_id": 8978,
                    "min_state_id": 8947,
                    "num_states": 32,
                    "numeric_id": 400,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "c",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "czx",
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "player_head"
                }
            ],
            "player_wall_head": [
                {
                    "block_entity": "skull",
                    "class": "cvc",
                    "display_name": "Player Wall Head",
                    "field": "gL",
                    "hardness": 1.0,
                    "max_state_id": 8906,
                    "min_state_id": 8903,
                    "num_states": 4,
                    "numeric_id": 401,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "cym",
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "player_wall_head"
                },
                {
                    "block_entity": "skull",
                    "class": "cyk",
                    "display_name": "Player Wall Head",
                    "field": "gL",
                    "hardness": 1.0,
                    "max_state_id": 8986,
                    "min_state_id": 8979,
                    "num_states": 8,
                    "numeric_id": 401,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "b",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "dbu",
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "player_wall_head"
                }
            ],
            "skeleton_skull": [
                {
                    "block_entity": "skull",
                    "class": "cwp",
                    "display_name": "Skeleton Skull",
                    "field": "gE",
                    "hardness": 1.0,
                    "max_state_id": 8842,
                    "min_state_id": 8827,
                    "num_states": 16,
                    "numeric_id": 394,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "b",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "skeleton_skull"
                },
                {
                    "block_entity": "skull",
                    "class": "czx",
                    "display_name": "Skeleton Skull",
                    "field": "gE",
                    "hardness": 1.0,
                    "max_state_id": 8858,
                    "min_state_id": 8827,
                    "num_states": 32,
                    "numeric_id": 394,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "c",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "skeleton_skull"
                }
            ],
            "skeleton_wall_skull": [
                {
                    "block_entity": "skull",
                    "class": "cym",
                    "display_name": "Skeleton Wall Skull",
                    "field": "gF",
                    "hardness": 1.0,
                    "max_state_id": 8846,
                    "min_state_id": 8843,
                    "num_states": 4,
                    "numeric_id": 395,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "skeleton_wall_skull"
                },
                {
                    "block_entity": "skull",
                    "class": "dbu",
                    "display_name": "Skeleton Wall Skull",
                    "field": "gF",
                    "hardness": 1.0,
                    "max_state_id": 8866,
                    "min_state_id": 8859,
                    "num_states": 8,
                    "numeric_id": 395,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "b",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "skeleton_wall_skull"
                }
            ],
            "wither_skeleton_skull": [
                {
                    "block_entity": "skull",
                    "class": "cyz",
                    "display_name": "Wither Skeleton Skull",
                    "field": "gG",
                    "hardness": 1.0,
                    "max_state_id": 8862,
                    "min_state_id": 8847,
                    "num_states": 16,
                    "numeric_id": 396,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "b",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "cwp",
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "wither_skeleton_skull"
                },
                {
                    "block_entity": "skull",
                    "class": "dch",
                    "display_name": "Wither Skeleton Skull",
                    "field": "gG",
                    "hardness": 1.0,
                    "max_state_id": 8898,
                    "min_state_id": 8867,
                    "num_states": 32,
                    "numeric_id": 396,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "c",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "czx",
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "wither_skeleton_skull"
                }
            ],
            "wither_skeleton_wall_skull": [
                {
                    "block_entity": "skull",
                    "class": "cza",
                    "display_name": "Wither Skeleton Wall Skull",
                    "field": "gH",
                    "hardness": 1.0,
                    "max_state_id": 8866,
                    "min_state_id": 8863,
                    "num_states": 4,
                    "numeric_id": 397,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "cym",
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "wither_skeleton_wall_skull"
                },
                {
                    "block_entity": "skull",
                    "class": "dci",
                    "display_name": "Wither Skeleton Wall Skull",
                    "field": "gH",
                    "hardness": 1.0,
                    "max_state_id": 8906,
                    "min_state_id": 8899,
                    "num_states": 8,
                    "numeric_id": 397,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "b",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "dbu",
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "wither_skeleton_wall_skull"
                }
            ],
            "zombie_head": [
                {
                    "block_entity": "skull",
                    "class": "cwp",
                    "display_name": "Zombie Head",
                    "field": "gI",
                    "hardness": 1.0,
                    "max_state_id": 8882,
                    "min_state_id": 8867,
                    "num_states": 16,
                    "numeric_id": 398,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "b",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "zombie_head"
                },
                {
                    "block_entity": "skull",
                    "class": "czx",
                    "display_name": "Zombie Head",
                    "field": "gI",
                    "hardness": 1.0,
                    "max_state_id": 8938,
                    "min_state_id": 8907,
                    "num_states": 32,
                    "numeric_id": 398,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "c",
                            "max": 15,
                            "min": 0,
                            "name": "rotation",
                            "num_values": 16,
                            "type": "int"
                        }
                    ],
                    "super": [
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "zombie_head"
                }
            ],
            "zombie_wall_head": [
                {
                    "block_entity": "skull",
                    "class": "cym",
                    "display_name": "Zombie Wall Head",
                    "field": "gJ",
                    "hardness": 1.0,
                    "max_state_id": 8886,
                    "min_state_id": 8883,
                    "num_states": 4,
                    "numeric_id": 399,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dcr",
                            "field_name": "a",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "coj",
                        "cpa",
                        "cpn"
                    ],
                    "text_id": "zombie_wall_head"
                },
                {
                    "block_entity": "skull",
                    "class": "dbu",
                    "display_name": "Zombie Wall Head",
                    "field": "gJ",
                    "hardness": 1.0,
                    "max_state_id": 8946,
                    "min_state_id": 8939,
                    "num_states": 8,
                    "numeric_id": 399,
                    "resistance": 1.0,
                    "states": [
                        {
                            "declared_in": "dfz",
                            "field_name": "a",
                            "name": "powered",
                            "num_values": 2,
                            "type": "bool"
                        },
                        {
                            "declared_in": "dfz",
                            "field_name": "b",
                            "name": "facing",
                            "num_values": 4,
                            "type": "direction",
                            "values": [
                                "NORTH",
                                "EAST",
                                "SOUTH",
                                "WEST"
                            ]
                        }
                    ],
                    "super": [
                        "crs",
                        "csi",
                        "csv"
                    ],
                    "text_id": "zombie_wall_head"
                }
            ]
        }
    },
    "entities": {
        "dataserializers": {
            "NBT": [
                {
                    "class": "aca$5",
                    "field": "s",
                    "id": 16,
                    "instructions": [
                        {
                            "field": "(qr)value",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "name": "NBT",
                    "type": "qr"
                },
                {
                    "class": "aeg$5",
                    "field": "s",
                    "id": 16,
                    "instructions": [
                        {
                            "condition": "((qw)value) == null",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "qy.b",
                                    "var": "((qw)value)"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "name": "NBT",
                    "type": "qw"
                }
            ]
        },
        "entity": {
            "block_display": [
                {
                    "class": "bfi$b",
                    "display_name": "Block Display",
                    "field": "j",
                    "height": 0.0,
                    "id": 8,
                    "metadata": [
                        {
                            "class": "bfj",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bfi",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "p",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "q",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": {
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "r",
                                    "index": 10,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "x": 1.0,
                                        "y": 1.0,
                                        "z": 1.0
                                    },
                                    "field": "s",
                                    "index": 11,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "t",
                                    "index": 12,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "u",
                                    "index": 13,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "field": "aD",
                                    "index": 14,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": -1,
                                    "field": "aE",
                                    "index": 15,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1.0,
                                    "field": "aF",
                                    "index": 16,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aG",
                                    "index": 17,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 1.0,
                                    "field": "aH",
                                    "index": 18,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aI",
                                    "index": 19,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aJ",
                                    "index": 20,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": -1,
                                    "field": "aK",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bfi$b",
                            "data": [
                                {
                                    "field": "p",
                                    "index": 22,
                                    "serializer": "BlockState",
                                    "serializer_id": 14
                                }
                            ]
                        }
                    ],
                    "name": "block_display",
                    "width": 0.0
                },
                {
                    "class": "bip$b",
                    "display_name": "Block Display",
                    "field": "j",
                    "height": 0.0,
                    "id": 8,
                    "metadata": [
                        {
                            "class": "biq",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bip",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "q",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "r",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "s",
                                    "index": 10,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": {
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "t",
                                    "index": 11,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "x": 1.0,
                                        "y": 1.0,
                                        "z": 1.0
                                    },
                                    "field": "u",
                                    "index": 12,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "v",
                                    "index": 13,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "aE",
                                    "index": 14,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "field": "aF",
                                    "index": 15,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": -1,
                                    "field": "aG",
                                    "index": 16,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1.0,
                                    "field": "aH",
                                    "index": 17,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aI",
                                    "index": 18,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 1.0,
                                    "field": "aJ",
                                    "index": 19,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aK",
                                    "index": 20,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aL",
                                    "index": 21,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": -1,
                                    "field": "aM",
                                    "index": 22,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bip$b",
                            "data": [
                                {
                                    "field": "q",
                                    "index": 23,
                                    "serializer": "BlockState",
                                    "serializer_id": 14
                                }
                            ]
                        }
                    ],
                    "name": "block_display",
                    "width": 0.0
                }
            ],
            "item_display": [
                {
                    "class": "bfi$g",
                    "display_name": "Item Display",
                    "field": "ae",
                    "height": 0.0,
                    "id": 55,
                    "metadata": [
                        {
                            "class": "bfj",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bfi",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "p",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "q",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": {
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "r",
                                    "index": 10,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "x": 1.0,
                                        "y": 1.0,
                                        "z": 1.0
                                    },
                                    "field": "s",
                                    "index": 11,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "t",
                                    "index": 12,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "u",
                                    "index": 13,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "field": "aD",
                                    "index": 14,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": -1,
                                    "field": "aE",
                                    "index": 15,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1.0,
                                    "field": "aF",
                                    "index": 16,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aG",
                                    "index": 17,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 1.0,
                                    "field": "aH",
                                    "index": 18,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aI",
                                    "index": 19,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aJ",
                                    "index": 20,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": -1,
                                    "field": "aK",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bfi$g",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "q",
                                    "index": 22,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                },
                                {
                                    "field": "r",
                                    "index": 23,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "item_display",
                    "width": 0.0
                },
                {
                    "class": "bip$g",
                    "display_name": "Item Display",
                    "field": "ae",
                    "height": 0.0,
                    "id": 55,
                    "metadata": [
                        {
                            "class": "biq",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bip",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "q",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "r",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "s",
                                    "index": 10,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": {
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "t",
                                    "index": 11,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "x": 1.0,
                                        "y": 1.0,
                                        "z": 1.0
                                    },
                                    "field": "u",
                                    "index": 12,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "v",
                                    "index": 13,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "aE",
                                    "index": 14,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "field": "aF",
                                    "index": 15,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": -1,
                                    "field": "aG",
                                    "index": 16,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1.0,
                                    "field": "aH",
                                    "index": 17,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aI",
                                    "index": 18,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 1.0,
                                    "field": "aJ",
                                    "index": 19,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aK",
                                    "index": 20,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aL",
                                    "index": 21,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": -1,
                                    "field": "aM",
                                    "index": 22,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bip$g",
                            "data": [
                                {
                                    "default": "Empty",
                                    "field": "r",
                                    "index": 23,
                                    "serializer": "Slot",
                                    "serializer_id": 7
                                },
                                {
                                    "field": "s",
                                    "index": 24,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "item_display",
                    "width": 0.0
                }
            ],
            "player": [
                {
                    "class": "byo",
                    "display_name": "Player",
                    "field": "bt",
                    "height": 1.8,
                    "id": 122,
                    "metadata": [
                        {
                            "class": "bfz",
                            "entity": "~abstract_living"
                        },
                        {
                            "bitfields": [],
                            "class": "byo",
                            "data": [
                                {
                                    "default": 0.0,
                                    "field": "e",
                                    "index": 15,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0,
                                    "field": "f",
                                    "index": 16,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "bL",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 1,
                                    "field": "bM",
                                    "index": 18,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "bN",
                                    "index": 19,
                                    "serializer": "NBT",
                                    "serializer_id": 16
                                },
                                {
                                    "default": "Empty",
                                    "field": "bO",
                                    "index": 20,
                                    "serializer": "NBT",
                                    "serializer_id": 16
                                }
                            ]
                        }
                    ],
                    "name": "player",
                    "serializable": "false",
                    "width": 0.6
                },
                {
                    "class": "cbu",
                    "display_name": "Player",
                    "field": "bt",
                    "height": 1.8,
                    "id": 122,
                    "metadata": [
                        {
                            "class": "bjg",
                            "entity": "~abstract_living"
                        },
                        {
                            "bitfields": [],
                            "class": "cbu",
                            "data": [
                                {
                                    "default": 0.0,
                                    "field": "e",
                                    "index": 15,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0,
                                    "field": "f",
                                    "index": 16,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "bM",
                                    "index": 17,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "field": "bN",
                                    "index": 18,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": "Empty",
                                    "field": "bO",
                                    "index": 19,
                                    "serializer": "NBT",
                                    "serializer_id": 16
                                },
                                {
                                    "default": "Empty",
                                    "field": "bP",
                                    "index": 20,
                                    "serializer": "NBT",
                                    "serializer_id": 16
                                }
                            ]
                        }
                    ],
                    "name": "player",
                    "serializable": "false",
                    "width": 0.6
                }
            ],
            "text_display": [
                {
                    "class": "bfi$k",
                    "display_name": "Text Display",
                    "field": "aX",
                    "height": 0.0,
                    "id": 100,
                    "metadata": [
                        {
                            "class": "bfj",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bfi",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "p",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "q",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": {
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "r",
                                    "index": 10,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "x": 1.0,
                                        "y": 1.0,
                                        "z": 1.0
                                    },
                                    "field": "s",
                                    "index": 11,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "t",
                                    "index": 12,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "u",
                                    "index": 13,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "field": "aD",
                                    "index": 14,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": -1,
                                    "field": "aE",
                                    "index": 15,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1.0,
                                    "field": "aF",
                                    "index": 16,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aG",
                                    "index": 17,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 1.0,
                                    "field": "aH",
                                    "index": 18,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aI",
                                    "index": 19,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aJ",
                                    "index": 20,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": -1,
                                    "field": "aK",
                                    "index": 21,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bfi$k",
                            "data": [
                                {
                                    "field": "aL",
                                    "index": 22,
                                    "serializer": "Chat",
                                    "serializer_id": 5
                                },
                                {
                                    "default": 200,
                                    "field": "aM",
                                    "index": 23,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1073741824,
                                    "field": "aN",
                                    "index": 24,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": -1,
                                    "field": "aO",
                                    "index": 25,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 0,
                                    "field": "aP",
                                    "index": 26,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "text_display",
                    "width": 0.0
                },
                {
                    "class": "bip$l",
                    "display_name": "Text Display",
                    "field": "aX",
                    "height": 0.0,
                    "id": 100,
                    "metadata": [
                        {
                            "class": "biq",
                            "entity": "~abstract_entity"
                        },
                        {
                            "bitfields": [],
                            "class": "bip",
                            "data": [
                                {
                                    "default": 0,
                                    "field": "q",
                                    "index": 8,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "r",
                                    "index": 9,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 0,
                                    "field": "s",
                                    "index": 10,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": {
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "t",
                                    "index": 11,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "x": 1.0,
                                        "y": 1.0,
                                        "z": 1.0
                                    },
                                    "field": "u",
                                    "index": 12,
                                    "serializer": "Vector3f",
                                    "serializer_id": 26
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "v",
                                    "index": 13,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "default": {
                                        "w": 1,
                                        "x": 0,
                                        "y": 0,
                                        "z": 0
                                    },
                                    "field": "aE",
                                    "index": 14,
                                    "serializer": "Quaternionf",
                                    "serializer_id": 27
                                },
                                {
                                    "field": "aF",
                                    "index": 15,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": -1,
                                    "field": "aG",
                                    "index": 16,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1.0,
                                    "field": "aH",
                                    "index": 17,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aI",
                                    "index": 18,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 1.0,
                                    "field": "aJ",
                                    "index": 19,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aK",
                                    "index": 20,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": 0.0,
                                    "field": "aL",
                                    "index": 21,
                                    "serializer": "Float",
                                    "serializer_id": 3
                                },
                                {
                                    "default": -1,
                                    "field": "aM",
                                    "index": 22,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                }
                            ]
                        },
                        {
                            "bitfields": [],
                            "class": "bip$l",
                            "data": [
                                {
                                    "field": "aM",
                                    "index": 23,
                                    "serializer": "Chat",
                                    "serializer_id": 5
                                },
                                {
                                    "default": 200,
                                    "field": "aN",
                                    "index": 24,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": 1073741824,
                                    "field": "aO",
                                    "index": 25,
                                    "serializer": "VarInt",
                                    "serializer_id": 1
                                },
                                {
                                    "default": -1,
                                    "field": "aP",
                                    "index": 26,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                },
                                {
                                    "default": 0,
                                    "field": "aQ",
                                    "index": 27,
                                    "serializer": "Byte",
                                    "serializer_id": 0
                                }
                            ]
                        }
                    ],
                    "name": "text_display",
                    "width": 0.0
                }
            ]
        }
    },
    "items": {
        "item": {
            "coast_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wz",
                    "max_stack_size": 64,
                    "numeric_id": 1221,
                    "text_id": "coast_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wz",
                    "max_stack_size": 64,
                    "numeric_id": 1221,
                    "text_id": "coast_armor_trim_smithing_template"
                }
            ],
            "dune_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wy",
                    "max_stack_size": 64,
                    "numeric_id": 1220,
                    "text_id": "dune_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wy",
                    "max_stack_size": 64,
                    "numeric_id": 1220,
                    "text_id": "dune_armor_trim_smithing_template"
                }
            ],
            "eye_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wC",
                    "max_stack_size": 64,
                    "numeric_id": 1224,
                    "text_id": "eye_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wC",
                    "max_stack_size": 64,
                    "numeric_id": 1224,
                    "text_id": "eye_armor_trim_smithing_template"
                }
            ],
            "host_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wM",
                    "max_stack_size": 64,
                    "numeric_id": 1234,
                    "text_id": "host_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wM",
                    "max_stack_size": 64,
                    "numeric_id": 1234,
                    "text_id": "host_armor_trim_smithing_template"
                }
            ],
            "netherite_upgrade_smithing_template": [
                {
                    "class": "chb",
                    "field": "ww",
                    "max_stack_size": 64,
                    "numeric_id": 1218,
                    "text_id": "netherite_upgrade_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "ww",
                    "max_stack_size": 64,
                    "numeric_id": 1218,
                    "text_id": "netherite_upgrade_smithing_template"
                }
            ],
            "raiser_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wL",
                    "max_stack_size": 64,
                    "numeric_id": 1233,
                    "text_id": "raiser_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wL",
                    "max_stack_size": 64,
                    "numeric_id": 1233,
                    "text_id": "raiser_armor_trim_smithing_template"
                }
            ],
            "rib_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wG",
                    "max_stack_size": 64,
                    "numeric_id": 1228,
                    "text_id": "rib_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wG",
                    "max_stack_size": 64,
                    "numeric_id": 1228,
                    "text_id": "rib_armor_trim_smithing_template"
                }
            ],
            "sentry_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wx",
                    "max_stack_size": 64,
                    "numeric_id": 1219,
                    "text_id": "sentry_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wx",
                    "max_stack_size": 64,
                    "numeric_id": 1219,
                    "text_id": "sentry_armor_trim_smithing_template"
                }
            ],
            "shaper_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wJ",
                    "max_stack_size": 64,
                    "numeric_id": 1231,
                    "text_id": "shaper_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wJ",
                    "max_stack_size": 64,
                    "numeric_id": 1231,
                    "text_id": "shaper_armor_trim_smithing_template"
                }
            ],
            "silence_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wK",
                    "max_stack_size": 64,
                    "numeric_id": 1232,
                    "text_id": "silence_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wK",
                    "max_stack_size": 64,
                    "numeric_id": 1232,
                    "text_id": "silence_armor_trim_smithing_template"
                }
            ],
            "snout_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wF",
                    "max_stack_size": 64,
                    "numeric_id": 1227,
                    "text_id": "snout_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wF",
                    "max_stack_size": 64,
                    "numeric_id": 1227,
                    "text_id": "snout_armor_trim_smithing_template"
                }
            ],
            "spire_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wH",
                    "max_stack_size": 64,
                    "numeric_id": 1229,
                    "text_id": "spire_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wH",
                    "max_stack_size": 64,
                    "numeric_id": 1229,
                    "text_id": "spire_armor_trim_smithing_template"
                }
            ],
            "tide_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wE",
                    "max_stack_size": 64,
                    "numeric_id": 1226,
                    "text_id": "tide_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wE",
                    "max_stack_size": 64,
                    "numeric_id": 1226,
                    "text_id": "tide_armor_trim_smithing_template"
                }
            ],
            "vex_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wD",
                    "max_stack_size": 64,
                    "numeric_id": 1225,
                    "text_id": "vex_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wD",
                    "max_stack_size": 64,
                    "numeric_id": 1225,
                    "text_id": "vex_armor_trim_smithing_template"
                }
            ],
            "ward_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wB",
                    "max_stack_size": 64,
                    "numeric_id": 1223,
                    "text_id": "ward_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wB",
                    "max_stack_size": 64,
                    "numeric_id": 1223,
                    "text_id": "ward_armor_trim_smithing_template"
                }
            ],
            "wayfinder_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wI",
                    "max_stack_size": 64,
                    "numeric_id": 1230,
                    "text_id": "wayfinder_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wI",
                    "max_stack_size": 64,
                    "numeric_id": 1230,
                    "text_id": "wayfinder_armor_trim_smithing_template"
                }
            ],
            "wild_armor_trim_smithing_template": [
                {
                    "class": "chb",
                    "field": "wA",
                    "max_stack_size": 64,
                    "numeric_id": 1222,
                    "text_id": "wild_armor_trim_smithing_template"
                },
                {
                    "class": "ckh",
                    "display_name": "Smithing Template",
                    "field": "wA",
                    "max_stack_size": 64,
                    "numeric_id": 1222,
                    "text_id": "wild_armor_trim_smithing_template"
                }
            ]
        }
    },
    "language": {
        "advancements": {
            "progress": [
                null,
                "%s/%s"
            ]
        },
        "attribute": {
            "name.generic.max_absorption": [
                null,
                "Max Absorption"
            ]
        },
        "chat": {
            "tag.error": [
                null,
                "Server sent invalid message."
            ],
            "validation_error": [
                null,
                "Chat validation error"
            ]
        },
        "commands": {
            "banlist.entry.unknown": [
                null,
                "(Unknown)"
            ],
            "function.error.argument_not_compound": [
                null,
                "Invalid argument type: %s, expected Compound"
            ],
            "function.error.missing_argument": [
                null,
                "Missing argument %2$s to function %1$s"
            ],
            "function.error.missing_arguments": [
                null,
                "Missing arguments to function %s"
            ],
            "function.error.parse": [
                null,
                "While instantiating macro %s: Command '%s' caused error: %s"
            ],
            "random.error.range_too_large": [
                null,
                "The range of the random value must be at most 2147483646"
            ],
            "random.error.range_too_small": [
                null,
                "The range of the random value must be at least 2"
            ],
            "random.reset.all.success": [
                null,
                "Reset %s random sequence(s)"
            ],
            "random.reset.success": [
                null,
                "Reset random sequence %s"
            ],
            "random.roll": [
                null,
                "%s rolled %s (from %s to %s)"
            ],
            "random.sample.success": [
                null,
                "Randomized value: %s"
            ]
        },
        "connect": {
            "reconfiging": [
                null,
                "Reconfiguring..."
            ],
            "reconfiguring": [
                null,
                "Reconfiguring..."
            ]
        },
        "container": {
            "shulkerBox.itemCount": [
                null,
                "%s x%s"
            ],
            "shulkerBox.unknownContents": [
                null,
                "???????"
            ]
        },
        "dataPack": {
            "trade_rebalance.description": [
                null,
                "Updated trades for Villagers"
            ],
            "trade_rebalance.name": [
                null,
                "Villager Trade Rebalance"
            ]
        },
        "death": {
            "attack.anvil.player": [
                "%1$s was squashed by a falling anvil whilst fighting %2$s",
                "%1$s was squashed by a falling anvil while fighting %2$s"
            ],
            "attack.cactus.player": [
                "%1$s walked into a cactus whilst trying to escape %2$s",
                "%1$s walked into a cactus while trying to escape %2$s"
            ],
            "attack.drown.player": [
                "%1$s drowned whilst trying to escape %2$s",
                "%1$s drowned while trying to escape %2$s"
            ],
            "attack.dryout.player": [
                "%1$s died from dehydration whilst trying to escape %2$s",
                "%1$s died from dehydration while trying to escape %2$s"
            ],
            "attack.fall.player": [
                "%1$s hit the ground too hard whilst trying to escape %2$s",
                "%1$s hit the ground too hard while trying to escape %2$s"
            ],
            "attack.fallingBlock.player": [
                "%1$s was squashed by a falling block whilst fighting %2$s",
                "%1$s was squashed by a falling block while fighting %2$s"
            ],
            "attack.fallingStalactite.player": [
                "%1$s was skewered by a falling stalactite whilst fighting %2$s",
                "%1$s was skewered by a falling stalactite while fighting %2$s"
            ],
            "attack.fireworks.player": [
                "%1$s went off with a bang whilst fighting %2$s",
                "%1$s went off with a bang while fighting %2$s"
            ],
            "attack.flyIntoWall.player": [
                "%1$s experienced kinetic energy whilst trying to escape %2$s",
                "%1$s experienced kinetic energy while trying to escape %2$s"
            ],
            "attack.genericKill.player": [
                "%1$s was killed whilst fighting %2$s",
                "%1$s was killed while fighting %2$s"
            ],
            "attack.inFire.player": [
                "%1$s walked into fire whilst fighting %2$s",
                "%1$s walked into fire while fighting %2$s"
            ],
            "attack.inWall.player": [
                "%1$s suffocated in a wall whilst fighting %2$s",
                "%1$s suffocated in a wall while fighting %2$s"
            ],
            "attack.lightningBolt.player": [
                "%1$s was struck by lightning whilst fighting %2$s",
                "%1$s was struck by lightning while fighting %2$s"
            ],
            "attack.magic.player": [
                "%1$s was killed by magic whilst trying to escape %2$s",
                "%1$s was killed by magic while trying to escape %2$s"
            ],
            "attack.message_too_long": [
                "Actually, the message was too long to deliver fully. Sorry! Here's stripped version: %s",
                "Actually, the message was too long to deliver fully. Sorry! Here's a stripped version: %s"
            ],
            "attack.onFire.item": [
                "%1$s was burnt to a crisp whilst fighting %2$s wielding %3$s",
                "%1$s was burned to a crisp while fighting %2$s wielding %3$s"
            ],
            "attack.onFire.player": [
                "%1$s was burnt to a crisp whilst fighting %2$s",
                "%1$s was burned to a crisp while fighting %2$s"
            ],
            "attack.outsideBorder.player": [
                "%1$s left the confines of this world whilst fighting %2$s",
                "%1$s left the confines of this world while fighting %2$s"
            ],
            "attack.sonic_boom.item": [
                "%1$s was obliterated by a sonically-charged shriek whilst trying to escape %2$s wielding %3$s",
                "%1$s was obliterated by a sonically-charged shriek while trying to escape %2$s wielding %3$s"
            ],
            "attack.sonic_boom.player": [
                "%1$s was obliterated by a sonically-charged shriek whilst trying to escape %2$s",
                "%1$s was obliterated by a sonically-charged shriek while trying to escape %2$s"
            ],
            "attack.stalagmite.player": [
                "%1$s was impaled on a stalagmite whilst fighting %2$s",
                "%1$s was impaled on a stalagmite while fighting %2$s"
            ],
            "attack.starve.player": [
                "%1$s starved to death whilst fighting %2$s",
                "%1$s starved to death while fighting %2$s"
            ],
            "attack.sweetBerryBush.player": [
                "%1$s was poked to death by a sweet berry bush whilst trying to escape %2$s",
                "%1$s was poked to death by a sweet berry bush while trying to escape %2$s"
            ],
            "attack.thorns": [
                "%1$s was killed trying to hurt %2$s",
                "%1$s was killed while trying to hurt %2$s"
            ],
            "attack.thorns.item": [
                "%1$s was killed by %3$s trying to hurt %2$s",
                "%1$s was killed by %3$s while trying to hurt %2$s"
            ],
            "attack.wither.player": [
                "%1$s withered away whilst fighting %2$s",
                "%1$s withered away while fighting %2$s"
            ]
        },
        "deathScreen": {
            "score.value": [
                null,
                "Score: %s"
            ]
        },
        "event": {
            "minecraft.raid.defeat.full": [
                null,
                "Raid - Defeat"
            ],
            "minecraft.raid.victory.full": [
                null,
                "Raid - Victory"
            ]
        },
        "filled_map": {
            "explorer_jungle": [
                null,
                "Jungle Explorer Map"
            ],
            "explorer_swamp": [
                null,
                "Swamp Explorer Map"
            ],
            "village_desert": [
                null,
                "Desert Village Map"
            ],
            "village_plains": [
                null,
                "Plains Village Map"
            ],
            "village_savanna": [
                null,
                "Savanna Village Map"
            ],
            "village_snowy": [
                null,
                "Snowy Village Map"
            ],
            "village_taiga": [
                null,
                "Taiga Village Map"
            ]
        },
        "gamerule": {
            "enderPearlsVanishOnDeath": [
                null,
                "Thrown ender pearls vanish on death"
            ],
            "enderPearlsVanishOnDeath.description": [
                null,
                "Whether ender pearls thrown by a player vanish when that player dies."
            ]
        },
        "gui": {
            "abuseReport.comments": [
                null,
                "Comments"
            ],
            "abuseReport.describe": [
                null,
                "Sharing details will help us make a well-informed decision."
            ],
            "abuseReport.discard.content": [
                null,
                "If you leave, you'll lose this report and your comments.\nAre you sure you want to leave?"
            ],
            "abuseReport.discard.discard": [
                null,
                "Leave and Discard Report"
            ],
            "abuseReport.discard.draft": [
                null,
                "Save as Draft"
            ],
            "abuseReport.discard.return": [
                null,
                "Continue Editing"
            ],
            "abuseReport.discard.title": [
                null,
                "Discard report and comments?"
            ],
            "abuseReport.draft.content": [
                null,
                "Would you like to continue editing the existing report or discard it and create a new one?"
            ],
            "abuseReport.draft.discard": [
                null,
                "Discard"
            ],
            "abuseReport.draft.edit": [
                null,
                "Continue Editing"
            ],
            "abuseReport.draft.quittotitle.content": [
                null,
                "Would you like to continue editing it or discard it?"
            ],
            "abuseReport.draft.quittotitle.title": [
                null,
                "You have a draft chat report that will be lost if you quit"
            ],
            "abuseReport.draft.title": [
                null,
                "Edit draft chat report?"
            ],
            "abuseReport.message": [
                null,
                "Where did you observe the bad behavior?\nThis will help us in researching your case."
            ],
            "abuseReport.more_comments": [
                null,
                "Please describe what happened:"
            ],
            "abuseReport.name.reporting": [
                null,
                "You are reporting \"%s\"."
            ],
            "abuseReport.name.title": [
                null,
                "Report Player Name"
            ],
            "abuseReport.observed_what": [
                null,
                "Why are you reporting this?"
            ],
            "abuseReport.read_info": [
                null,
                "Learn About Reporting"
            ],
            "abuseReport.reason.defamation_impersonation_false_information": [
                "Defamation, impersonation, or false information",
                "Defamation"
            ],
            "abuseReport.reason.defamation_impersonation_false_information.description": [
                "Someone is damaging someone else's reputation, pretending to be someone they're not, or sharing false information with the aim to exploit or mislead others.",
                "Someone is damaging your or someone else's reputation, for example sharing false information with the aim to exploit or mislead others."
            ],
            "abuseReport.reason.generic": [
                null,
                "I want to report them"
            ],
            "abuseReport.reason.generic.description": [
                null,
                "I'm annoyed with them / they have done something I do not like."
            ],
            "abuseReport.reason.imminent_harm": [
                "Imminent harm - Threat to harm others",
                "Threat of harm to others"
            ],
            "abuseReport.reason.self_harm_or_suicide": [
                "Imminent harm - Self-harm or suicide",
                "Self-harm or suicide"
            ],
            "abuseReport.report_sent_msg": [
                null,
                "We\u2019ve successfully received your report. Thank you!\n\nOur team will review it as soon as possible."
            ],
            "abuseReport.select_reason": [
                null,
                "Select Report Category"
            ],
            "abuseReport.send": [
                null,
                "Send Report"
            ],
            "abuseReport.send.comment_too_long": [
                null,
                "Please shorten the comment"
            ],
            "abuseReport.send.no_reason": [
                null,
                "Please select a report category"
            ],
            "abuseReport.skin.title": [
                null,
                "Report Player Skin"
            ],
            "abuseReport.title": [
                null,
                "Report Player"
            ],
            "abuseReport.type.chat": [
                null,
                "Chat Messages"
            ],
            "abuseReport.type.name": [
                null,
                "Player Name"
            ],
            "abuseReport.type.skin": [
                null,
                "Player Skin"
            ],
            "banned.name.description": [
                null,
                "Your current name - \"%s\" - violates our Community Standards. You can play singleplayer, but will need to change your name to play online.\n\nLearn more or submit a case review at the following link: %s"
            ],
            "banned.name.title": [
                null,
                "Name Not Allowed in Multiplayer"
            ],
            "banned.skin.description": [
                null,
                "Your current skin violates our Community Standards. You can still play with a default skin, or select a new one.\n\nLearn more or submit a case review at the following link: %s"
            ],
            "banned.skin.title": [
                null,
                "Skin Not Allowed"
            ],
            "chatReport.title": [
                "Report Player",
                "Report Player Chat"
            ],
            "recipebook.page": [
                null,
                "%s/%s"
            ]
        },
        "item": {
            "minecraft.coast_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.dune_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.eye_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.host_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.netherite_upgrade_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.raiser_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.rib_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.sentry_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.shaper_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.silence_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.snout_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.spire_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.tide_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.vex_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.ward_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.wayfinder_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ],
            "minecraft.wild_armor_trim_smithing_template": [
                null,
                "Smithing Template"
            ]
        },
        "loading": [
            null,
            {
                "progress": "%s%%"
            }
        ],
        "mco": {
            "download.speed.narration": [
                null,
                "%s/s"
            ],
            "errorMessage.noDetails": [
                null,
                "No error details provided"
            ],
            "errorMessage.realmsService.connectivity": [
                null,
                "Could not connect to Realms: %s"
            ],
            "errorMessage.realmsService.unknownCompatibility": [
                null,
                "Could not check compatible version, got response: %s"
            ],
            "errorMessage.retry": [
                null,
                "Retry operation"
            ],
            "selectServer.create.subtitle": [
                null,
                "Select what world to put on your new realm"
            ],
            "selectServer.loading": [
                null,
                "Loading Realms List"
            ],
            "selectServer.noRealms": [
                null,
                "You don't seem to have a Realm. Add a Realm to play together with your friends."
            ],
            "selectServer.popup": [
                "Realms is a safe, simple way to enjoy an online Minecraft world with up to ten friends at a time.   It supports loads of minigames and plenty of custom worlds! Only the owner of the realm needs to pay.",
                "Realms is a safe, simple way to enjoy an online Minecraft world with up to ten friends at a time. It supports loads of minigames and plenty of custom worlds! Only the owner of the realm needs to pay."
            ],
            "upload.percent": [
                null,
                "%s %%"
            ]
        },
        "merchant": {
            "title": [
                null,
                "%s - %s"
            ]
        },
        "multiplayer": {
            "player.list.hp": [
                null,
                "%shp"
            ],
            "status.player_count": [
                null,
                "%s/%s"
            ]
        },
        "narration": {
            "suggestion.usage.cycle.fixed": [
                null,
                "Press Tab to cycle to the next suggestion"
            ],
            "suggestion.usage.cycle.hidable": [
                null,
                "Press Tab to cycle to the next suggestion, or Escape to leave suggestions"
            ],
            "suggestion.usage.fill.fixed": [
                null,
                "Press Tab to use suggestion"
            ],
            "suggestion.usage.fill.hidable": [
                null,
                "Press Tab to use suggestion, or Escape to leave suggestions"
            ]
        },
        "optimizeWorld": {
            "progress.counter": [
                null,
                "%s / %s"
            ],
            "progress.percentage": [
                null,
                "%s%%"
            ]
        },
        "options": {
            "accessibility": [
                null,
                "Accessibility Settings..."
            ],
            "accessibility.narrator_hotkey": [
                null,
                "Narrator Hotkey"
            ],
            "accessibility.narrator_hotkey.tooltip": [
                null,
                "Allows the Narrator to be toggled on and off with 'Ctrl+B'"
            ],
            "accessibility.title": [
                "Accessibility Settings...",
                "Accessibility Settings"
            ],
            "chat": [
                null,
                "Chat Settings..."
            ],
            "chat.title": [
                "Chat Settings...",
                "Chat Settings"
            ],
            "fullscreen.entry": [
                null,
                "%sx%s@%s (%sbit)"
            ],
            "language.title": [
                null,
                "Language"
            ],
            "languageAccuracyWarning": [
                null,
                "(Language translations may not be 100%% accurate)"
            ]
        },
        "outOfMemory": {
            "message": [
                "Minecraft has run out of memory.\n\nThis could be caused by a bug in the game or by the Java Virtual Machine not being allocated enough memory.\n\nTo prevent level corruption, the current game has quit. We've tried to free up enough memory to let you go back to the main menu and back to playing, but this may not have worked.\n\nPlease restart the game if you see this message again.",
                "Minecraft has run out of memory.\n\nThis could be caused by a bug in the game or by the Java Virtual Machine not being allocated enough memory.\n\nTo prevent world corruption, the current game has quit. We've tried to free up enough memory to let you go back to the main menu and back to playing, but this may not have worked.\n\nPlease restart the game if you see this message again."
            ]
        },
        "pack": {
            "dropRejected.message": [
                null,
                "The following entries were not valid packs and were not copied:\n %s"
            ],
            "dropRejected.title": [
                null,
                "Non-pack entries"
            ]
        },
        "selectWorld": {
            "loading_list": [
                "Loading world list",
                "Loading World List"
            ]
        },
        "stats": {
            "none": [
                null,
                "-"
            ]
        },
        "subtitles": {
            "block.sponge.absorb": [
                null,
                "Sponge sucks"
            ]
        },
        "symlink_warning": {
            "message.pack": [
                null,
                "Loading packs with symbolic links can be unsafe if you don't know exactly what you are doing. Please visit %s to learn more."
            ],
            "message.world": [
                null,
                "Loading worlds from folders with symbolic links can be unsafe if you don't know exactly what you are doing. Please visit %s to learn more."
            ],
            "title.pack": [
                null,
                "Added pack(s) contain(s) symbolic links"
            ],
            "title.world": [
                null,
                "The world folder contains symbolic links"
            ]
        },
        "telemetry_info": {
            "button.privacy_statement": [
                null,
                "Privacy Statement"
            ]
        },
        "title": {
            "credits": [
                null,
                "Copyright Mojang AB. Do not distribute!"
            ],
            "multiplayer.disabled.banned.name": [
                null,
                "You must change your name before you can play online"
            ]
        }
    },
    "packets": {
        "packet": {
            "CONFIGURATION_CLIENTBOUND_00": [
                null,
                {
                    "class": "vh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "a",
                            "method": "a(Lso;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "vw",
                            "type": "interface"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_01": [
                null,
                {
                    "class": "vi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_02": [
                null,
                {
                    "class": "wq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 2,
                    "instructions": [],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_03": [
                null,
                {
                    "class": "vj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_04": [
                null,
                {
                    "class": "vk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_05": [
                null,
                {
                    "class": "wr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "hu.a.encode(wr.b, a)",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_06": [
                null,
                {
                    "class": "vl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_07": [
                null,
                {
                    "class": "ws.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "aew",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_CLIENTBOUND_08": [
                null,
                {
                    "class": "vm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<aev, aqk$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<aew, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_SERVERBOUND_00": [
                null,
                {
                    "class": "vo.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "a.b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "a.c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "a.d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a.e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a.f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "a.g",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a.h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a.i",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_SERVERBOUND_01": [
                null,
                {
                    "class": "vp.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "a",
                            "method": "a(Lso;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "vw",
                            "type": "interface"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_SERVERBOUND_02": [
                null,
                {
                    "class": "wu.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 2,
                    "instructions": [],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_SERVERBOUND_03": [
                null,
                {
                    "class": "vq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_SERVERBOUND_04": [
                null,
                {
                    "class": "vr.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "CONFIGURATION_SERVERBOUND_05": [
                null,
                {
                    "class": "vs.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "CONFIGURATION"
                }
            ],
            "LOGIN_CLIENTBOUND_02": [
                {
                    "class": "abg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 2,
                    "instructions": [
                        {
                            "field": "a.getId()",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "a.getName()",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "a.getProperties().values().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.getProperties().values().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.authlib.properties.Property",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getName()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "condition": "itv.hasSignature()",
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "itv.getSignature()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "LOGIN"
                },
                {
                    "class": "adg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 2,
                    "instructions": [
                        {
                            "field": "a.getId()",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "a.getName()",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "a.getProperties().values().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.getProperties().values().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.authlib.properties.Property",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.name()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.value()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.signature() != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.signature() != null",
                                    "instructions": [
                                        {
                                            "field": "itv.signature()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "LOGIN"
                }
            ],
            "LOGIN_CLIENTBOUND_04": [
                {
                    "class": "abf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "LOGIN"
                },
                {
                    "class": "adf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "b",
                            "method": "a(Lso;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "adq",
                            "type": "interface"
                        }
                    ],
                    "state": "LOGIN"
                }
            ],
            "LOGIN_SERVERBOUND_00": [
                {
                    "class": "abm.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "16",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "LOGIN"
                },
                {
                    "class": "adm.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "16",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "uuid"
                        }
                    ],
                    "state": "LOGIN"
                }
            ],
            "LOGIN_SERVERBOUND_02": [
                {
                    "class": "abl.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 2,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "c != null",
                            "instructions": [
                                {
                                    "field": "c.slice()",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "LOGIN"
                },
                {
                    "class": "adl.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 2,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b != null",
                            "instructions": [
                                {
                                    "args": "packetbuffer",
                                    "field": "b",
                                    "method": "a(Lso;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "adp",
                                    "type": "interface"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "LOGIN"
                }
            ],
            "LOGIN_SERVERBOUND_03": [
                null,
                {
                    "class": "ado.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 3,
                    "instructions": [],
                    "state": "LOGIN"
                }
            ],
            "PLAY_CLIENTBOUND_03": [
                {
                    "class": "uu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "wz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_04": [
                {
                    "class": "uv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<apk, int>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "jb.y.getId(itv.getKey().a())",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.getKey().a().a().getId(itv.getKey().b())",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_05": [
                {
                    "class": "uw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<amo, int>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "jb.y.getId(itv.getKey().a())",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.getKey().a().a().getId(itv.getKey().b())",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_06": [
                {
                    "class": "ux.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_07": [
                {
                    "class": "uy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "jb.l.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "c == null",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "qy.b",
                                    "var": "this.c"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_08": [
                {
                    "class": "uz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "jb.l.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "jb.f.getId(d)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_09": [
                {
                    "class": "va.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "jb.f.getId(d)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "csv.o.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0A": [
                {
                    "class": "vb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "cpn.o.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "e",
                            "method": "a(Lso;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "xg$c",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0B": [
                {
                    "class": "vc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "e",
                            "method": "a(Lsf;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "vc$c",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0C": [
                {
                    "class": "ve.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0D": [
                {
                    "class": "vf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "vf$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a.a()",
                                    "operation": "write",
                                    "type": "long"
                                },
                                {
                                    "field": "itv.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0E": [
                {
                    "class": "vg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "xl$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a.a()",
                                    "operation": "write",
                                    "type": "long"
                                },
                                {
                                    "field": "itv.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_0F": [
                {
                    "class": "vh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.getList().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.brigadier.suggestion.Suggestion",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.getTooltip() != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "sy.a(itv.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_10": [
                {
                    "class": "vi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "i.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.i.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "vi$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "varint[]"
                                },
                                {
                                    "condition": "itv.b & 0x8",
                                    "instructions": [
                                        {
                                            "field": "itv.c",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv.a != null",
                                    "instructions": [
                                        {
                                            "args": "packetbuffer",
                                            "field": "itv.a",
                                            "method": "a(Lsf;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "vi$e",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.getList().iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "com.mojang.brigadier.suggestion.Suggestion",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "itv.getTooltip() != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "tn.a(itv.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_11": [
                {
                    "class": "vj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "i.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.i.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "xo$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.d.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "varint[]"
                                },
                                {
                                    "condition": "itv.b & 0x8",
                                    "instructions": [
                                        {
                                            "field": "itv.c",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "itv.a != null",
                                    "instructions": [
                                        {
                                            "args": "packetbuffer",
                                            "field": "itv.a",
                                            "method": "a(Lso;)V",
                                            "name": "a",
                                            "operation": "interfacecall",
                                            "target": "xo$e",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_12": [
                {
                    "class": "vk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cfz",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_13": [
                {
                    "class": "vl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cjf",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_14": [
                {
                    "class": "vm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_15": [
                {
                    "class": "vn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "jb.i.getId(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_16": [
                {
                    "class": "vo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "jb.i.getId(a)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_17": [
                {
                    "class": "vp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "t",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "u.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_18": [
                {
                    "class": "vq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e.isPresent()",
                            "instructions": [
                                {
                                    "field": "e.get().a()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e.get().b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e.get().c()",
                                    "operation": "write",
                                    "type": "double"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "a",
                            "method": "a(Lso;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "vw",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_19": [
                {
                    "class": "vr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a.a() + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "a.b() != null",
                            "instructions": [
                                {
                                    "field": "a.b().c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e.isPresent()",
                            "instructions": [
                                {
                                    "field": "e.get().a()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e.get().b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "e.get().c()",
                                    "operation": "write",
                                    "type": "double"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1A": [
                {
                    "class": "vs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a.a() + 1",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "a.b() != null",
                            "instructions": [
                                {
                                    "field": "a.b().c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1B": [
                {
                    "class": "vt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.c != null",
                            "instructions": [
                                {
                                    "field": "b.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1C": [
                {
                    "class": "vu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.c != null",
                            "instructions": [
                                {
                                    "field": "b.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1D": [
                {
                    "class": "vv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "apa.a(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "apa.a(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "apa.a(this.c)",
                            "var": "var4"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "gu",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.u() - var2)",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.v() - var3)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.w() - var4)",
                                    "var": "var7"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var6",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1E": [
                {
                    "class": "vw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "xz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "arw.a(this.a)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "arw.a(this.b)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "arw.a(this.c)",
                            "var": "var4"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "gw",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.u() - var2)",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.v() - var3)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(itv.w() - var4)",
                                    "var": "var7"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var6",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_1F": [
                {
                    "class": "vx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "r.b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "s",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ya.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_20": [
                {
                    "class": "vy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "s.b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "t",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_21": [
                {
                    "class": "vz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_22": [
                {
                    "class": "wa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_23": [
                {
                    "class": "wb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ye.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_24": [
                {
                    "class": "wd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c.b",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "c.c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "c.d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wc$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "jb.l.getId(itv.c)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv.d",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_25": [
                {
                    "class": "we.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "condition": "c.b == null",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "qy.b",
                                    "var": "this.c.b"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c.c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "c.d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "yf$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "itv.b",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "jb.l.getId(itv.c)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "condition": "itv.d == null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "qy.b",
                                            "var": "itv.d"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "d.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_26": [
                {
                    "class": "wf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "jb.k.getId(j.b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lsf;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "it",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_27": [
                {
                    "class": "wg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "jb.k.getId(j.b())",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "j",
                            "method": "a(Lso;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "it",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_28": [
                {
                    "class": "wi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cmj.a(d)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acp",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "hv.a.encode(wi.s, f)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "h.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "n",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "o",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "q.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "q.isPresent()",
                            "instructions": [
                                {
                                    "field": "q.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "q.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "r",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.a.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.a.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.b.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.b.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.c.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.c.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.d.toLongArray().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c.d.toLongArray()",
                            "operation": "write",
                            "type": "long[]"
                        },
                        {
                            "field": "c.e.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.e.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "byte",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_29": [
                {
                    "class": "wj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.d.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "dyl",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.b()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.e() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.g() != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "aev",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "j.a.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "j.b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "j.c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "j.d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cps.a(j.e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "j.f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "j.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "j.h.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "j.h.isPresent()",
                            "instructions": [
                                {
                                    "field": "j.h.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "j.h.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "j.i",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2A": [
                {
                    "class": "wk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "clk",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.c()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "itv.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "itv.k()",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ym.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "field": "d.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.d.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "ebt",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.c()",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.e()",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.f() & 0xf",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "itv.g() != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.g() != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.g()",
                                                    "operation": "write",
                                                    "type": "chatcomponent"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e.c",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.d",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.b",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "e.e.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "e.e",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2B": [
                {
                    "class": "wl$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cot",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.d()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.c()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "itv.p()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "itv.g()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.i()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.o()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.m()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "itv.n()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "itv.k()",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2C": [
                {
                    "class": "wl$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yo$a.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2D": [
                {
                    "class": "wl$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yo$b.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2E": [
                {
                    "class": "wm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yo$c.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_2F": [
                {
                    "class": "wn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_30": [
                {
                    "class": "wo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "jb.s.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_31": [
                {
                    "class": "wp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "jb.s.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_32": [
                {
                    "class": "wq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ys.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_33": [
                {
                    "class": "wr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_34": [
                {
                    "class": "ws.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "adx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_35": [
                {
                    "class": "wt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "c != null",
                            "instructions": [
                                {
                                    "field": "c.c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "d.a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d.b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.d.b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.d.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "th$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a() + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "condition": "itv.b() != null",
                                    "instructions": [
                                        {
                                            "field": "itv.b().c",
                                            "operation": "write",
                                            "type": "byte[]"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "f.j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "f.j == sz$a.c",
                            "instructions": [
                                {
                                    "field": "f.i.toLongArray().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f.i.toLongArray()",
                                    "operation": "write",
                                    "type": "long[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "g.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "g.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.c != null",
                            "instructions": [
                                {
                                    "field": "g.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_36": [
                {
                    "class": "wu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_37": [
                {
                    "class": "wv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [],
                    "state": "PLAY"
                },
                {
                    "class": "yv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "c != null",
                            "instructions": [
                                {
                                    "field": "c.c",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "d.a",
                            "length": "256",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d.b.toEpochMilli()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.d.b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.d.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "tw$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a() + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "condition": "itv.b() != null",
                                    "instructions": [
                                        {
                                            "field": "itv.b().c",
                                            "operation": "write",
                                            "type": "byte[]"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "f.j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "f.j == to$a.c",
                            "instructions": [
                                {
                                    "field": "f.i.toLongArray().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f.i.toLongArray()",
                                    "operation": "write",
                                    "type": "long[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "g.a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "g.b",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "g.c != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.c != null",
                            "instructions": [
                                {
                                    "field": "g.c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_38": [
                {
                    "class": "ww.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_39": [
                {
                    "class": "wx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.util.UUID",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3A": [
                {
                    "class": "wy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "6",
                            "operation": "write",
                            "type": "bitset"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "wy$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.a.iterator()",
                                    "var": "var3"
                                },
                                {
                                    "condition": "var3.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((wy$a)var3.next())",
                                            "var": "var4"
                                        },
                                        {
                                            "args": "packetbuffer, itv",
                                            "field": "var4.h",
                                            "method": "write(Lsf;Lwy$b;)V",
                                            "name": "write",
                                            "operation": "interfacecall",
                                            "target": "wy$a$b",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3B": [
                {
                    "class": "wz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "yz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.util.UUID",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "uuid"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3C": [
                {
                    "class": "xa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "bgn.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "za.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "a",
                            "length": "6",
                            "operation": "write",
                            "type": "bitset"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "za$b",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "uuid"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.a.iterator()",
                                    "var": "var3"
                                },
                                {
                                    "condition": "var3.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((za$a)var3.next())",
                                            "var": "var4"
                                        },
                                        {
                                            "args": "packetbuffer, itv",
                                            "field": "var4.h",
                                            "method": "write(Lso;Lza$b;)V",
                                            "name": "write",
                                            "operation": "interfacecall",
                                            "target": "za$a$b",
                                            "type": "interface"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3D": [
                {
                    "class": "xb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "ccq.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aml$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "var6.a",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var6.b",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acq",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == xb$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "acq",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "d",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3E": [
                {
                    "class": "xc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "bju.a(f)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_3F": [
                {
                    "class": "xd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "jb.e.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "cfw.values()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aph$a)this.d.b.get(var5))",
                                    "var": "var6"
                                },
                                {
                                    "condition": "var6 == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "var6.a",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var6.b",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "aew",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "a == zd$a.a",
                            "instructions": [
                                {
                                    "field": "c.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.c.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "aew",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_40": [
                {
                    "class": "xe.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ze.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_41": [
                {
                    "class": "xf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "d.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "g.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cmj.a(h)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "l.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "l.isPresent()",
                            "instructions": [
                                {
                                    "field": "l.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "l.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "m",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "jb.e.getId(b)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_42": [
                {
                    "class": "xg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "e != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "e != null",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_43": [
                {
                    "class": "xh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(((long)cpn.i(d[var2])) << 0xc) | ((long)c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "d.a.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d.b.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d.c",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "d.d.a()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "cps.a(d.e)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d.f",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.g",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "d.h.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "d.h.isPresent()",
                            "instructions": [
                                {
                                    "field": "d.h.get().a().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "d.h.get().b()",
                                    "operation": "write",
                                    "type": "position"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "d.i",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_44": [
                {
                    "class": "xi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_45": [
                {
                    "class": "xj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "b.s()",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "c.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < c.length",
                            "instructions": [
                                {
                                    "field": "(((long)csv.i(d[var2])) << 0xc) | ((long)c[var2])",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_46": [
                {
                    "class": "xk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "a != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a != null",
                            "instructions": [
                                {
                                    "field": "a",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_47": [
                {
                    "class": "xl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "b.get().length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.get()",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_48": [
                {
                    "class": "xm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_49": [
                {
                    "class": "xn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4A": [
                {
                    "class": "xo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varlong"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4B": [
                {
                    "class": "xp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4D": [
                {
                    "class": "xr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4E": [
                {
                    "class": "xs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_4F": [
                {
                    "class": "xt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zs.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_50": [
                {
                    "class": "xu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_51": [
                {
                    "class": "xv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_52": [
                {
                    "class": "xw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((acb$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "aca.b(var3.b)",
                                    "var": "var2"
                                },
                                {
                                    "field": "var3.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var2",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, var3.c",
                                    "field": "var3.b",
                                    "method": "a(Lsf;Ljava/lang/Object;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "abz",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "0xff",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_53": [
                {
                    "class": "xx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_54": [
                {
                    "class": "xy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.c.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((aeh$b)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "aeg.b(var3.b)",
                                    "var": "var2"
                                },
                                {
                                    "field": "var3.a",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var2",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "args": "packetbuffer, var3.c",
                                    "field": "var3.b",
                                    "method": "a(Lso;Ljava/lang/Object;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "aef",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "0xff",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_55": [
                {
                    "class": "xz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((bfo)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(cfz)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_56": [
                {
                    "class": "ya.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "zz.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_57": [
                {
                    "class": "yb.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aaa.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.c.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.c.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((biv)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(cjf)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_58": [
                {
                    "class": "yc.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aab.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_59": [
                {
                    "class": "yd.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aac.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5A": [
                {
                    "class": "ye.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "ye.b(h)",
                            "instructions": [
                                {
                                    "field": "((ye$b)k.orElseThrow(ye::g)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((ye$b)k.orElseThrow(ye::g)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((ye$b)k.orElseThrow(ye::g)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((ye$b)k.orElseThrow(ye::g)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((ye$b)k.orElseThrow(ye::g)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((ye$b)k.orElseThrow(ye::g)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((ye$b)k.orElseThrow(ye::g)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "ye.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aad.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "field": "e",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "f",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5B": [
                {
                    "class": "yf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != adg$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aae.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5C": [
                {
                    "class": "yg.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aaf.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 92,
                    "instructions": [
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "aaf.b(h)",
                            "instructions": [
                                {
                                    "field": "((aaf$b)k.orElseThrow(aaf::h)).a",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((aaf$b)k.orElseThrow(aaf::h)).g",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "((aaf$b)k.orElseThrow(aaf::h)).d",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((aaf$b)k.orElseThrow(aaf::h)).e",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "((aaf$b)k.orElseThrow(aaf::h)).f",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "((aaf$b)k.orElseThrow(aaf::h)).b",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "((aaf$b)k.orElseThrow(aaf::h)).c",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "aaf.a(h)",
                            "instructions": [
                                {
                                    "field": "j.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "this.j.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "java.lang.String",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5D": [
                {
                    "class": "yh.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aag.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 93,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(b == null) ? \"\" : b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "d != afn$a.b",
                            "instructions": [
                                {
                                    "field": "c",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_5E": [
                {
                    "class": "yi.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aah.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 94,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_60": [
                {
                    "class": "yk.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aaj.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 96,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_61": [
                {
                    "class": "yl.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "jb.c.t().getId(a) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "a.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "a.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "a.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aak.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 97,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_62": [
                {
                    "class": "ym.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "b.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "jb.c.t().getId(b) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "b.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "b.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "b.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aal.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 98,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_63": [
                {
                    "class": "yn.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aam.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 99,
                    "instructions": [
                        {
                            "field": "a.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "jb.c.t().getId(a) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "a.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "a.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "a.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "a.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_64": [
                {
                    "class": "yo.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aan.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 100,
                    "instructions": [
                        {
                            "field": "b.getKind()",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "Kind.REFERENCE"
                                },
                                {
                                    "field": "jb.c.t().getId(b) + 1",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "Kind.DIRECT"
                                },
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "b.d",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "b.b().isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "b.b().isPresent()",
                                    "instructions": [
                                        {
                                            "field": "b.b().get()",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "operation": "break"
                                }
                            ],
                            "operation": "switch"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_65": [
                {
                    "class": "yp.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aao.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 101,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_66": [
                {
                    "class": "yq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aap.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 102,
                    "instructions": [
                        {
                            "condition": "d != null",
                            "instructions": [
                                {
                                    "condition": "c != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "c",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "d",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "c != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "c",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_67": [
                {
                    "class": "yr.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 103,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aaq.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 103,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_68": [
                {
                    "class": "ys.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 104,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aar.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 104,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_69": [
                {
                    "class": "yt.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 105,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<acq, ae$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "itv.getValue().f == null",
                                    "instructions": [
                                        {
                                            "field": "f",
                                            "obj": "itv.getValue()",
                                            "operation": "putfield",
                                            "value": "itv.getValue().g.createRequirements(itv.getValue().e.keySet())"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().a != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().a != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().a",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().c != null",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.getValue().c != null",
                                    "instructions": [
                                        {
                                            "field": "itv.getValue().c.a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.getValue().c.c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.getValue().c.e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.getValue().c.h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.getValue().c.d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().c.d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.getValue().c.i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.getValue().c.j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, aj>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().f.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.getValue().f",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.getValue().h",
                                    "operation": "write",
                                    "type": "boolean"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acq",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<acq, ag>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, ak>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "itv.getValue().b != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().b != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().b.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aas.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 105,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "b == null",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "qy.b",
                                    "var": "this.b"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6A": [
                {
                    "class": "yu.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 106,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "yu$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "jb.v.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "bhe",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aat.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 106,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6B": [
                {
                    "class": "yv.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 107,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "acq",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aau.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 107,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6C": [
                {
                    "class": "yw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 108,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "jb.e.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i != null",
                            "instructions": [
                                {
                                    "field": "bfa$a.a.encode(rc.a, i)",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aav.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 108,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "af",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.a",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b.a.isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.b.a.isPresent()",
                                    "instructions": [
                                        {
                                            "field": "itv.b.a.get()",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.b.b.isPresent()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "itv.b.b.isPresent()",
                                    "instructions": [
                                        {
                                            "field": "itv.b.b.get().a",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.b.b.get().b",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "itv.b.b.get().c",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "itv.b.b.get().e",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "itv.b.b.get().d != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.b.b.get().f",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "itv.b.b.get().h",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "itv.b.b.get().d != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.b.b.get().d",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "itv.b.b.get().i",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "itv.b.b.get().j",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "itv.b.e.b.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "itv.b.e.b",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "itv.b.f",
                                    "operation": "write",
                                    "type": "boolean"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "c.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.c.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "aew",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "d.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.d.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<aew, ah>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().e.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().e.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<java.lang.String, an>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "itv.getValue().a != null",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "itv.getValue().a != null",
                                            "instructions": [
                                                {
                                                    "field": "itv.getValue().a.toEpochMilli()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6D": [
                {
                    "class": "yx.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 109,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cjc",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "jb.u.b(itv.aj_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.e()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv",
                                    "field": "itv.aj_()",
                                    "method": "a(Lsf;Lcjc;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "cje",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aaw.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 109,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.b.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "aaw$a",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "jb.v.b(itv.a())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.b()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "itv.c().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.c().iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "bkk",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.a()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "itv.d()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "itv.c().a()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6E": [
                {
                    "class": "yy.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 110,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<acp, ano$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<acq, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aax.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 110,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "jb.e.getId(e)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i != null",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "i != null",
                            "instructions": [
                                {
                                    "field": "bid$a.a.encode(ri.a, i)",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_6F": [
                null,
                {
                    "class": "aay.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 111,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "cmk",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "jb.u.b(itv.b().an_())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, itv.b()",
                                    "field": "itv.b().an_()",
                                    "method": "a(Lso;Lcmj;)V",
                                    "name": "a",
                                    "operation": "interfacecall",
                                    "target": "cmm",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_CLIENTBOUND_70": [
                null,
                {
                    "class": "vm.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 112,
                    "instructions": [
                        {
                            "field": "a.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.a.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<aev, aqk$a>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey().a()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "itv.getValue().a.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Iterator",
                                    "value": "itv.getValue().a.iterator()",
                                    "var": "it"
                                },
                                {
                                    "condition": "it.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Map.Entry<aew, it.unimi.dsi.fastutil.ints.IntList>",
                                            "value": "it.next()",
                                            "var": "itv"
                                        },
                                        {
                                            "field": "itv.getKey()",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "field": "itv.getValue().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Iterator",
                                            "value": "itv.getValue().iterator()",
                                            "var": "it"
                                        },
                                        {
                                            "condition": "it.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "it.next()",
                                                    "var": "itv"
                                                },
                                                {
                                                    "field": "itv",
                                                    "operation": "write",
                                                    "type": "varint"
                                                }
                                            ],
                                            "operation": "loop"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_07": [
                {
                    "class": "zk.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abm.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_08": [
                {
                    "class": "zl.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abn.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_09": [
                {
                    "class": "zm.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "length": "32500",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vo.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "a.b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "a.c",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "a.d",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a.e",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a.f",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "a.g",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a.h",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "a.i",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0A": [
                {
                    "class": "zn.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abo.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "length": "32500",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0B": [
                {
                    "class": "zo.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.h.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<int, cfz>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abp.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 11,
                    "instructions": [],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0C": [
                {
                    "class": "zp.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0D": [
                {
                    "class": "zq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abr.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "h.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.h.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Map.Entry<int, cjf>",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv.getKey()",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "itv.getValue()",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0E": [
                {
                    "class": "zr.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "length": "8192",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.isPresent()",
                            "instructions": [
                                {
                                    "field": "g.get()",
                                    "length": "128",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abs.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_0F": [
                {
                    "class": "zs.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vp.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "a.a()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "a",
                            "method": "a(Lso;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "vw",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_10": [
                {
                    "class": "zt.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "b",
                            "method": "a(Lsf;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "zt$a",
                            "type": "interface"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abt.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "f.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Iterator",
                            "value": "this.f.iterator()",
                            "var": "it"
                        },
                        {
                            "condition": "it.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "java.lang.String",
                                    "value": "it.next()",
                                    "var": "itv"
                                },
                                {
                                    "field": "itv",
                                    "length": "8192",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "g.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "g.isPresent()",
                            "instructions": [
                                {
                                    "field": "g.get()",
                                    "length": "128",
                                    "operation": "write",
                                    "type": "string"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_11": [
                {
                    "class": "zu.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abu.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_12": [
                {
                    "class": "zv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b.a()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "b",
                            "method": "a(Lso;)V",
                            "name": "a",
                            "operation": "interfacecall",
                            "target": "abv$a",
                            "type": "interface"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_13": [
                {
                    "class": "zw.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abw.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_14": [
                {
                    "class": "zx$a.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_15": [
                {
                    "class": "zx$b.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abx.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_16": [
                {
                    "class": "zx$c.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aby$a.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_17": [
                {
                    "class": "zx$d.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aby$b.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_18": [
                {
                    "class": "zy.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aby$c.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_19": [
                {
                    "class": "zz.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aby$d.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "(f) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1A": [
                {
                    "class": "aaa.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "abz.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1B": [
                {
                    "class": "aab.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aca.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1C": [
                {
                    "class": "aac.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 28,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "b",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acb.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1D": [
                {
                    "class": "aad.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b.d()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aeb.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1E": [
                {
                    "class": "aae.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acc.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_1F": [
                {
                    "class": "aaf.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acd.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 31,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "b",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_20": [
                {
                    "class": "aag.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ace.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b.d()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_21": [
                {
                    "class": "aah.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acf.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_22": [
                {
                    "class": "aai.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acg.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "e",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_23": [
                {
                    "class": "aaj.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vr.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_24": [
                {
                    "class": "aak.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ach.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_25": [
                {
                    "class": "aal.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a == aal$a.a",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aci.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_26": [
                {
                    "class": "aam.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acj.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_27": [
                {
                    "class": "aan.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.isPresent()",
                            "instructions": [
                                {
                                    "field": "jb.e.getId(a.get())",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "jb.e.getId(b.get())",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "vs.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_28": [
                {
                    "class": "aao.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "ack.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "a == ack$a.a",
                            "instructions": [
                                {
                                    "field": "b",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_29": [
                {
                    "class": "aap.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 1)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 2)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 4)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acl.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2A": [
                {
                    "class": "aaq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acm.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "a.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "a.isPresent()",
                            "instructions": [
                                {
                                    "field": "jb.e.getId(a.get())",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "b.isPresent()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "b.isPresent()",
                            "instructions": [
                                {
                                    "field": "jb.e.getId(b.get())",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2B": [
                {
                    "class": "aar.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acn.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2C": [
                {
                    "class": "aas.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "f.c()",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "aco.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "i",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "f",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 1)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "g",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 2)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "h",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 4)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2D": [
                {
                    "class": "aat.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h.u()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "h.v()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "h.w()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.u()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.v()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.w()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "q",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "m",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 1)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "n",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 2)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "o",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 4)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acp.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2E": [
                {
                    "class": "aau.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < 4",
                            "instructions": [
                                {
                                    "field": "c[var2]",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acq.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_2F": [
                {
                    "class": "aav.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acr.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "f.c()",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_30": [
                {
                    "class": "aaw.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acs.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "e",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "f",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "g",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "h.u()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "h.v()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "h.w()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.u()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.v()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "i.w()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "j",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "k",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "l",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "p",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "q",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "m",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 1)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "n",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 2)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "o",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 4)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_31": [
                {
                    "class": "aax.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.a()",
                            "var": "var2"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "a.b()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.e()",
                            "var": "var3"
                        },
                        {
                            "field": "(float)(var3.c - ((double)var2.u()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)(var3.d - ((double)var2.v()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)(var3.e - ((double)var2.w()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "a.d()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "act.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 49,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "d",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < 4",
                            "instructions": [
                                {
                                    "field": "c[var2]",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_32": [
                {
                    "class": "aay.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                {
                    "class": "acu.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_33": [
                null,
                {
                    "class": "acv.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "uuid"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_34": [
                null,
                {
                    "class": "acw.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.a()",
                            "var": "var2"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "a.b()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.a.e()",
                            "var": "var3"
                        },
                        {
                            "field": "(float)(var3.c - ((double)var2.u()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)(var3.d - ((double)var2.v()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)(var3.e - ((double)var2.w()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "a.d()",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "c",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ],
            "PLAY_SERVERBOUND_35": [
                null,
                {
                    "class": "acx.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "a",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "b",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                }
            ]
        }
    },
    "pluginchannels": {
        "clientbound": [
            [
                "minecraft:brand",
                "minecraft:debug/bee",
                "minecraft:debug/brain",
                "minecraft:debug/game_event",
                "minecraft:debug/game_event_listeners",
                "minecraft:debug/game_test_add_marker",
                "minecraft:debug/game_test_clear",
                "minecraft:debug/goal_selector",
                "minecraft:debug/hive",
                "minecraft:debug/neighbors_update",
                "minecraft:debug/path",
                "minecraft:debug/poi_added",
                "minecraft:debug/poi_removed",
                "minecraft:debug/poi_ticket_count",
                "minecraft:debug/raids",
                "minecraft:debug/structures",
                "minecraft:debug/village_sections",
                "minecraft:debug/worldgen_attempt"
            ],
            [
                "minecraft:payload"
            ]
        ],
        "serverbound": [
            [
                "minecraft:brand"
            ],
            [
                "minecraft:payload"
            ]
        ]
    },
    "recipes": {},
    "sounds": {
        "ambient.underwater.enter": [
            {
                "field": "x",
                "id": 23,
                "name": "ambient.underwater.enter",
                "sounds": [
                    {
                        "hash": "9579b9b2dc9d2be2fe1d6a81c2e99b6a45650bf3",
                        "name": "ambient/underwater/enter1",
                        "volume": 0.8
                    },
                    {
                        "hash": "9bbc6019f9fafa16239f603ea788fce721b7f601",
                        "name": "ambient/underwater/enter2",
                        "volume": 0.8
                    },
                    {
                        "hash": "8c7fa514148b39ddb4929f3caf1d4b6ab4330e5c",
                        "name": "ambient/underwater/enter3",
                        "volume": 0.8
                    }
                ]
            },
            {
                "field": "x",
                "id": 23,
                "name": "ambient.underwater.enter",
                "sounds": [
                    {
                        "hash": "9579b9b2dc9d2be2fe1d6a81c2e99b6a45650bf3",
                        "name": "ambient/underwater/enter1",
                        "volume": 0.5
                    },
                    {
                        "hash": "9bbc6019f9fafa16239f603ea788fce721b7f601",
                        "name": "ambient/underwater/enter2",
                        "volume": 0.5
                    },
                    {
                        "hash": "8c7fa514148b39ddb4929f3caf1d4b6ab4330e5c",
                        "name": "ambient/underwater/enter3",
                        "volume": 0.5
                    }
                ]
            }
        ],
        "ambient.underwater.exit": [
            {
                "field": "y",
                "id": 24,
                "name": "ambient.underwater.exit",
                "sounds": [
                    {
                        "hash": "751fec52a10bb2a5309a765fc622727422556a64",
                        "name": "ambient/underwater/exit1",
                        "volume": 0.5
                    },
                    {
                        "hash": "d3f646d9e0d0a198644229f76da0141893159b0b",
                        "name": "ambient/underwater/exit2",
                        "volume": 0.5
                    },
                    {
                        "hash": "2c6a5e15b4a84fc5a631ddc2eedf9868dd520f39",
                        "name": "ambient/underwater/exit3",
                        "volume": 0.5
                    }
                ]
            },
            {
                "field": "y",
                "id": 24,
                "name": "ambient.underwater.exit",
                "sounds": [
                    {
                        "hash": "751fec52a10bb2a5309a765fc622727422556a64",
                        "name": "ambient/underwater/exit1",
                        "volume": 0.3
                    },
                    {
                        "hash": "d3f646d9e0d0a198644229f76da0141893159b0b",
                        "name": "ambient/underwater/exit2",
                        "volume": 0.3
                    },
                    {
                        "hash": "2c6a5e15b4a84fc5a631ddc2eedf9868dd520f39",
                        "name": "ambient/underwater/exit3",
                        "volume": 0.3
                    }
                ]
            }
        ],
        "block.sponge.absorb": [
            null,
            {
                "field": "xj",
                "id": 1256,
                "name": "block.sponge.absorb",
                "sounds": [
                    {
                        "hash": "3aa16dc0cb98b207552d722f759be8ef7712ee40",
                        "name": "block/sponge/absorb1"
                    },
                    {
                        "hash": "431c1513bd7d75ee6eb20cad361551274d5d08a0",
                        "name": "block/sponge/absorb2"
                    },
                    {
                        "hash": "0084f65e6832508990fb3dbf010daded53538c03",
                        "name": "block/sponge/absorb3"
                    }
                ],
                "subtitle": "Sponge sucks",
                "subtitle_key": "subtitles.block.sponge.absorb"
            }
        ],
        "block.sponge.break": [
            null,
            {
                "field": "xe",
                "id": 1251,
                "name": "block.sponge.break",
                "sounds": [
                    {
                        "hash": "729942857a51357dcbee04a584abe0df32a4232b",
                        "name": "block/sponge/break1"
                    },
                    {
                        "hash": "2854dd6357cb53acc808c890244d42c60a0610fd",
                        "name": "block/sponge/break2"
                    },
                    {
                        "hash": "e74fa6b2d60aa73be422c82b30e33c16d9da35e0",
                        "name": "block/sponge/break3"
                    },
                    {
                        "hash": "ea36dd93f8250459938aefb0f9d596f1392fc8fa",
                        "name": "block/sponge/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.sponge.fall": [
            null,
            {
                "field": "xf",
                "id": 1252,
                "name": "block.sponge.fall",
                "sounds": [
                    {
                        "hash": "8ba533372b6f1a52fb8a24bb58eebfaf61f807d0",
                        "name": "block/sponge/step1"
                    },
                    {
                        "hash": "b5b06482cf5054fc45b75d61e35e8c0325782b48",
                        "name": "block/sponge/step2"
                    },
                    {
                        "hash": "22ca3b48d2e6110484c0e32dff16aef236ead168",
                        "name": "block/sponge/step3"
                    },
                    {
                        "hash": "99ea2d461460f0f4d4f3908d3a8298265d0746bc",
                        "name": "block/sponge/step4"
                    },
                    {
                        "hash": "9efc43b5f5103fbc7f1caf56c22bde1474e4b121",
                        "name": "block/sponge/step5"
                    },
                    {
                        "hash": "13133a9d079f049f6600e910527f4758fa46bd2e",
                        "name": "block/sponge/step6"
                    }
                ]
            }
        ],
        "block.sponge.hit": [
            null,
            {
                "field": "xg",
                "id": 1253,
                "name": "block.sponge.hit",
                "sounds": [
                    {
                        "hash": "8ba533372b6f1a52fb8a24bb58eebfaf61f807d0",
                        "name": "block/sponge/step1",
                        "volume": 0.8
                    },
                    {
                        "hash": "b5b06482cf5054fc45b75d61e35e8c0325782b48",
                        "name": "block/sponge/step2",
                        "volume": 0.8
                    },
                    {
                        "hash": "22ca3b48d2e6110484c0e32dff16aef236ead168",
                        "name": "block/sponge/step3",
                        "volume": 0.8
                    },
                    {
                        "hash": "99ea2d461460f0f4d4f3908d3a8298265d0746bc",
                        "name": "block/sponge/step4",
                        "volume": 0.8
                    },
                    {
                        "hash": "9efc43b5f5103fbc7f1caf56c22bde1474e4b121",
                        "name": "block/sponge/step5",
                        "volume": 0.8
                    },
                    {
                        "hash": "13133a9d079f049f6600e910527f4758fa46bd2e",
                        "name": "block/sponge/step6",
                        "volume": 0.8
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.sponge.place": [
            null,
            {
                "field": "xh",
                "id": 1254,
                "name": "block.sponge.place",
                "sounds": [
                    {
                        "hash": "729942857a51357dcbee04a584abe0df32a4232b",
                        "name": "block/sponge/break1"
                    },
                    {
                        "hash": "2854dd6357cb53acc808c890244d42c60a0610fd",
                        "name": "block/sponge/break2"
                    },
                    {
                        "hash": "e74fa6b2d60aa73be422c82b30e33c16d9da35e0",
                        "name": "block/sponge/break3"
                    },
                    {
                        "hash": "ea36dd93f8250459938aefb0f9d596f1392fc8fa",
                        "name": "block/sponge/break4"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.sponge.step": [
            null,
            {
                "field": "xi",
                "id": 1255,
                "name": "block.sponge.step",
                "sounds": [
                    {
                        "hash": "8ba533372b6f1a52fb8a24bb58eebfaf61f807d0",
                        "name": "block/sponge/step1"
                    },
                    {
                        "hash": "b5b06482cf5054fc45b75d61e35e8c0325782b48",
                        "name": "block/sponge/step2"
                    },
                    {
                        "hash": "22ca3b48d2e6110484c0e32dff16aef236ead168",
                        "name": "block/sponge/step3"
                    },
                    {
                        "hash": "99ea2d461460f0f4d4f3908d3a8298265d0746bc",
                        "name": "block/sponge/step4"
                    },
                    {
                        "hash": "9efc43b5f5103fbc7f1caf56c22bde1474e4b121",
                        "name": "block/sponge/step5"
                    },
                    {
                        "hash": "13133a9d079f049f6600e910527f4758fa46bd2e",
                        "name": "block/sponge/step6"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "block.wet_sponge.break": [
            null,
            {
                "field": "zY",
                "id": 1401,
                "name": "block.wet_sponge.break",
                "sounds": [
                    {
                        "hash": "e2cdfe61fc018d84bba507fcdc76545809b0576f",
                        "name": "block/sponge/wet_sponge/break1"
                    },
                    {
                        "hash": "8d45ab2bc4daa17ea7a923b7f14f3312cc451dd3",
                        "name": "block/sponge/wet_sponge/break2"
                    },
                    {
                        "hash": "aac72c558a3bf69e9a4c83defd1b104141cd6577",
                        "name": "block/sponge/wet_sponge/break3"
                    },
                    {
                        "hash": "953629d54e08a4bf652aa6d2a338727a21a4b1f4",
                        "name": "block/sponge/wet_sponge/break4"
                    }
                ],
                "subtitle": "Block broken",
                "subtitle_key": "subtitles.block.generic.break"
            }
        ],
        "block.wet_sponge.fall": [
            null,
            {
                "field": "zZ",
                "id": 1402,
                "name": "block.wet_sponge.fall",
                "sounds": [
                    {
                        "hash": "0ca6d01e68ebf7e8b6d54a2d44515dd007315d27",
                        "name": "block/sponge/wet_sponge/step1"
                    },
                    {
                        "hash": "b81d84b6d8ef123324f4f58d99aa51a0d4914b98",
                        "name": "block/sponge/wet_sponge/step2"
                    },
                    {
                        "hash": "2bd332e7b7783ae10e846a51a0fb7209f892b540",
                        "name": "block/sponge/wet_sponge/step3"
                    },
                    {
                        "hash": "c1635cc0219e601297a6d47f2d5cc3d109787525",
                        "name": "block/sponge/wet_sponge/step4"
                    }
                ]
            }
        ],
        "block.wet_sponge.hit": [
            null,
            {
                "field": "Aa",
                "id": 1403,
                "name": "block.wet_sponge.hit",
                "sounds": [
                    {
                        "hash": "0ca6d01e68ebf7e8b6d54a2d44515dd007315d27",
                        "name": "block/sponge/wet_sponge/step1"
                    },
                    {
                        "hash": "b81d84b6d8ef123324f4f58d99aa51a0d4914b98",
                        "name": "block/sponge/wet_sponge/step2"
                    },
                    {
                        "hash": "2bd332e7b7783ae10e846a51a0fb7209f892b540",
                        "name": "block/sponge/wet_sponge/step3"
                    },
                    {
                        "hash": "c1635cc0219e601297a6d47f2d5cc3d109787525",
                        "name": "block/sponge/wet_sponge/step4"
                    }
                ],
                "subtitle": "Block breaking",
                "subtitle_key": "subtitles.block.generic.hit"
            }
        ],
        "block.wet_sponge.place": [
            null,
            {
                "field": "Ab",
                "id": 1404,
                "name": "block.wet_sponge.place",
                "sounds": [
                    {
                        "hash": "e2cdfe61fc018d84bba507fcdc76545809b0576f",
                        "name": "block/sponge/wet_sponge/break1"
                    },
                    {
                        "hash": "8d45ab2bc4daa17ea7a923b7f14f3312cc451dd3",
                        "name": "block/sponge/wet_sponge/break2"
                    },
                    {
                        "hash": "aac72c558a3bf69e9a4c83defd1b104141cd6577",
                        "name": "block/sponge/wet_sponge/break3"
                    },
                    {
                        "hash": "953629d54e08a4bf652aa6d2a338727a21a4b1f4",
                        "name": "block/sponge/wet_sponge/break4"
                    }
                ],
                "subtitle": "Block placed",
                "subtitle_key": "subtitles.block.generic.place"
            }
        ],
        "block.wet_sponge.step": [
            null,
            {
                "field": "Ac",
                "id": 1405,
                "name": "block.wet_sponge.step",
                "sounds": [
                    {
                        "hash": "0ca6d01e68ebf7e8b6d54a2d44515dd007315d27",
                        "name": "block/sponge/wet_sponge/step1"
                    },
                    {
                        "hash": "b81d84b6d8ef123324f4f58d99aa51a0d4914b98",
                        "name": "block/sponge/wet_sponge/step2"
                    },
                    {
                        "hash": "2bd332e7b7783ae10e846a51a0fb7209f892b540",
                        "name": "block/sponge/wet_sponge/step3"
                    },
                    {
                        "hash": "c1635cc0219e601297a6d47f2d5cc3d109787525",
                        "name": "block/sponge/wet_sponge/step4"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.camel.step": [
            {
                "field": "cZ",
                "id": 207,
                "name": "entity.camel.step",
                "sounds": [
                    {
                        "hash": "0eaf63e114fdc307e318b31a43e228c1f4387c81",
                        "name": "mob/camel/step1",
                        "volume": 0.5
                    },
                    {
                        "hash": "ce94d4fa54ef9de2b8b3e88683093bf177ca8278",
                        "name": "mob/camel/step2",
                        "volume": 0.5
                    },
                    {
                        "hash": "b692f6c77f84bd887a79ab519c33e7532fc25dea",
                        "name": "mob/camel/step3",
                        "volume": 0.5
                    },
                    {
                        "hash": "a4857d4c844d07c4fcb9f06f74339900745eec6a",
                        "name": "mob/camel/step4",
                        "volume": 0.5
                    },
                    {
                        "hash": "233b338e13c17aec1048de3b17f8574ce8ea8049",
                        "name": "mob/camel/step5",
                        "volume": 0.5
                    },
                    {
                        "hash": "4debec9dc62d068117353faa457d79cbbc91c82e",
                        "name": "mob/camel/step6",
                        "volume": 0.5
                    }
                ],
                "subtitle": "Camel steps",
                "subtitle_key": "subtitles.entity.camel.step"
            },
            {
                "field": "cZ",
                "id": 207,
                "name": "entity.camel.step",
                "sounds": [
                    {
                        "hash": "0eaf63e114fdc307e318b31a43e228c1f4387c81",
                        "name": "mob/camel/step1",
                        "volume": 0.5
                    },
                    {
                        "hash": "ce94d4fa54ef9de2b8b3e88683093bf177ca8278",
                        "name": "mob/camel/step2",
                        "volume": 0.5
                    },
                    {
                        "hash": "b692f6c77f84bd887a79ab519c33e7532fc25dea",
                        "name": "mob/camel/step3",
                        "volume": 0.5
                    },
                    {
                        "hash": "a4857d4c844d07c4fcb9f06f74339900745eec6a",
                        "name": "mob/camel/step4",
                        "volume": 0.5
                    },
                    {
                        "hash": "233b338e13c17aec1048de3b17f8574ce8ea8049",
                        "name": "mob/camel/step5",
                        "volume": 0.5
                    },
                    {
                        "hash": "4debec9dc62d068117353faa457d79cbbc91c82e",
                        "name": "mob/camel/step6",
                        "volume": 0.5
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.camel.step_sand": [
            {
                "field": "da",
                "id": 208,
                "name": "entity.camel.step_sand",
                "sounds": [
                    {
                        "hash": "c38dfc112c6762daa315afde3f059e8c9ec4e48f",
                        "name": "mob/camel/step_sand1",
                        "volume": 0.45
                    },
                    {
                        "hash": "5214b44cbc6aa25d07f9fe146d92a68abfc967ca",
                        "name": "mob/camel/step_sand2",
                        "volume": 0.45
                    },
                    {
                        "hash": "8dfcec9ada0d6b48585ad2749d62526c26ea7bfd",
                        "name": "mob/camel/step_sand3",
                        "volume": 0.45
                    },
                    {
                        "hash": "fdf4c26863c42c647bc7e674e82d231ca54a95ba",
                        "name": "mob/camel/step_sand4",
                        "volume": 0.45
                    },
                    {
                        "hash": "e016ace48566d631c1508f4ba6acdfc759b07773",
                        "name": "mob/camel/step_sand5",
                        "volume": 0.45
                    },
                    {
                        "hash": "5ec5275e38f39507062fbb17d8c6b253fbfc5963",
                        "name": "mob/camel/step_sand6",
                        "volume": 0.45
                    }
                ],
                "subtitle": "Camel sands",
                "subtitle_key": "subtitles.entity.camel.step_sand"
            },
            {
                "field": "da",
                "id": 208,
                "name": "entity.camel.step_sand",
                "sounds": [
                    {
                        "hash": "c38dfc112c6762daa315afde3f059e8c9ec4e48f",
                        "name": "mob/camel/step_sand1",
                        "volume": 0.45
                    },
                    {
                        "hash": "5214b44cbc6aa25d07f9fe146d92a68abfc967ca",
                        "name": "mob/camel/step_sand2",
                        "volume": 0.45
                    },
                    {
                        "hash": "8dfcec9ada0d6b48585ad2749d62526c26ea7bfd",
                        "name": "mob/camel/step_sand3",
                        "volume": 0.45
                    },
                    {
                        "hash": "fdf4c26863c42c647bc7e674e82d231ca54a95ba",
                        "name": "mob/camel/step_sand4",
                        "volume": 0.45
                    },
                    {
                        "hash": "e016ace48566d631c1508f4ba6acdfc759b07773",
                        "name": "mob/camel/step_sand5",
                        "volume": 0.45
                    },
                    {
                        "hash": "5ec5275e38f39507062fbb17d8c6b253fbfc5963",
                        "name": "mob/camel/step_sand6",
                        "volume": 0.45
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.drowned.step": [
            {
                "field": "gD",
                "id": 393,
                "name": "entity.drowned.step",
                "sounds": [
                    {
                        "hash": "4e650cb9e5ab7c6095eb2248c4deb475cae26e6a",
                        "name": "mob/drowned/step1"
                    },
                    {
                        "hash": "543a126bcca9c482b75f61adec9aa2f60e146e2d",
                        "name": "mob/drowned/step2"
                    },
                    {
                        "hash": "04d00bc852751498fad759fe473fef917b51c55d",
                        "name": "mob/drowned/step3"
                    },
                    {
                        "hash": "ae405dda6f73b5439b1fa575aad1d73a748099ce",
                        "name": "mob/drowned/step4"
                    },
                    {
                        "hash": "ba0d0f797b9092bbe3028f01099091fb184bc4a9",
                        "name": "mob/drowned/step5"
                    }
                ],
                "subtitle": "Drowned steps",
                "subtitle_key": "subtitles.entity.drowned.step"
            },
            {
                "field": "gD",
                "id": 393,
                "name": "entity.drowned.step",
                "sounds": [
                    {
                        "hash": "4e650cb9e5ab7c6095eb2248c4deb475cae26e6a",
                        "name": "mob/drowned/step1"
                    },
                    {
                        "hash": "543a126bcca9c482b75f61adec9aa2f60e146e2d",
                        "name": "mob/drowned/step2"
                    },
                    {
                        "hash": "04d00bc852751498fad759fe473fef917b51c55d",
                        "name": "mob/drowned/step3"
                    },
                    {
                        "hash": "ae405dda6f73b5439b1fa575aad1d73a748099ce",
                        "name": "mob/drowned/step4"
                    },
                    {
                        "hash": "ba0d0f797b9092bbe3028f01099091fb184bc4a9",
                        "name": "mob/drowned/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.hoglin.step": [
            {
                "field": "kT",
                "id": 617,
                "name": "entity.hoglin.step",
                "sounds": [
                    {
                        "hash": "e74778a70471c5a17eeb91e8dd1e566461d9e03b",
                        "name": "mob/hoglin/step1"
                    },
                    {
                        "hash": "97b52210f12181c96547f94dda806a9a3ff838a5",
                        "name": "mob/hoglin/step2"
                    },
                    {
                        "hash": "52a7472cf6668455a36ba0f983ae5a6070d281d3",
                        "name": "mob/hoglin/step3"
                    },
                    {
                        "hash": "cf9bf7b67bd70c059ed47e1d3b083164c9a3fe3b",
                        "name": "mob/hoglin/step4"
                    },
                    {
                        "hash": "e23c92855842c24e7739658088781e8f279fb955",
                        "name": "mob/hoglin/step5"
                    },
                    {
                        "hash": "83feec79544d5776e39509b943917b3c021a052e",
                        "name": "mob/hoglin/step6"
                    }
                ],
                "subtitle": "Hoglin steps",
                "subtitle_key": "subtitles.entity.hoglin.step"
            },
            {
                "field": "kT",
                "id": 617,
                "name": "entity.hoglin.step",
                "sounds": [
                    {
                        "hash": "e74778a70471c5a17eeb91e8dd1e566461d9e03b",
                        "name": "mob/hoglin/step1"
                    },
                    {
                        "hash": "97b52210f12181c96547f94dda806a9a3ff838a5",
                        "name": "mob/hoglin/step2"
                    },
                    {
                        "hash": "52a7472cf6668455a36ba0f983ae5a6070d281d3",
                        "name": "mob/hoglin/step3"
                    },
                    {
                        "hash": "cf9bf7b67bd70c059ed47e1d3b083164c9a3fe3b",
                        "name": "mob/hoglin/step4"
                    },
                    {
                        "hash": "e23c92855842c24e7739658088781e8f279fb955",
                        "name": "mob/hoglin/step5"
                    },
                    {
                        "hash": "83feec79544d5776e39509b943917b3c021a052e",
                        "name": "mob/hoglin/step6"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.llama.step": [
            {
                "field": "mD",
                "id": 704,
                "name": "entity.llama.step",
                "sounds": [
                    {
                        "hash": "7584883d3969a771716a29f55a695acad068c9c8",
                        "name": "mob/llama/step1"
                    },
                    {
                        "hash": "20ddc6a5fec1f7be2d92c73ffed513855fe7a906",
                        "name": "mob/llama/step2"
                    },
                    {
                        "hash": "d380b144db2faf356520919d646ab95863cbf51e",
                        "name": "mob/llama/step3"
                    },
                    {
                        "hash": "7c8f2ffac9470cbd75cb668797714c3602bc3ebe",
                        "name": "mob/llama/step4"
                    },
                    {
                        "hash": "6aef9bad980e39643edb9154457da314357ed1f1",
                        "name": "mob/llama/step5"
                    }
                ],
                "subtitle": "Llama steps",
                "subtitle_key": "subtitles.entity.llama.step"
            },
            {
                "field": "mD",
                "id": 704,
                "name": "entity.llama.step",
                "sounds": [
                    {
                        "hash": "7584883d3969a771716a29f55a695acad068c9c8",
                        "name": "mob/llama/step1"
                    },
                    {
                        "hash": "20ddc6a5fec1f7be2d92c73ffed513855fe7a906",
                        "name": "mob/llama/step2"
                    },
                    {
                        "hash": "d380b144db2faf356520919d646ab95863cbf51e",
                        "name": "mob/llama/step3"
                    },
                    {
                        "hash": "7c8f2ffac9470cbd75cb668797714c3602bc3ebe",
                        "name": "mob/llama/step4"
                    },
                    {
                        "hash": "6aef9bad980e39643edb9154457da314357ed1f1",
                        "name": "mob/llama/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.panda.step": [
            {
                "field": "qP",
                "id": 924,
                "name": "entity.panda.step",
                "sounds": [
                    {
                        "hash": "72e37a7fd294aedfc51e0263c6c537546c6deb95",
                        "name": "mob/panda/step1"
                    },
                    {
                        "hash": "69d128e741956899750edb40ed742e225a838c5a",
                        "name": "mob/panda/step2"
                    },
                    {
                        "hash": "80b44a271d273b3cdf7c4854c707bde64fa572a8",
                        "name": "mob/panda/step3"
                    },
                    {
                        "hash": "e81e2941f3f5e74239a333cf39df92825cd916f8",
                        "name": "mob/panda/step4"
                    },
                    {
                        "hash": "4bcc89bcd50c84f794a65ff740a4783b130281d4",
                        "name": "mob/panda/step5"
                    }
                ],
                "subtitle": "Panda steps",
                "subtitle_key": "subtitles.entity.panda.step"
            },
            {
                "field": "qP",
                "id": 924,
                "name": "entity.panda.step",
                "sounds": [
                    {
                        "hash": "72e37a7fd294aedfc51e0263c6c537546c6deb95",
                        "name": "mob/panda/step1"
                    },
                    {
                        "hash": "69d128e741956899750edb40ed742e225a838c5a",
                        "name": "mob/panda/step2"
                    },
                    {
                        "hash": "80b44a271d273b3cdf7c4854c707bde64fa572a8",
                        "name": "mob/panda/step3"
                    },
                    {
                        "hash": "e81e2941f3f5e74239a333cf39df92825cd916f8",
                        "name": "mob/panda/step4"
                    },
                    {
                        "hash": "4bcc89bcd50c84f794a65ff740a4783b130281d4",
                        "name": "mob/panda/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.piglin.step": [
            {
                "field": "sb",
                "id": 988,
                "name": "entity.piglin.step",
                "sounds": [
                    {
                        "hash": "bdcf0eaebc0b0e9e2651e263606c677ff41e8e4b",
                        "name": "mob/piglin/step1",
                        "volume": 0.75
                    },
                    {
                        "hash": "f1453221fbd91bec20ab3e608739b8fc9a17a9a2",
                        "name": "mob/piglin/step2",
                        "volume": 0.75
                    },
                    {
                        "hash": "bb5d472d24c5e21caa0076c50c01635af389c52c",
                        "name": "mob/piglin/step3",
                        "volume": 0.75
                    },
                    {
                        "hash": "abd8c7ef2b1e12c01ff5c9ec3af5b74a891a48f6",
                        "name": "mob/piglin/step4",
                        "volume": 0.75
                    },
                    {
                        "hash": "f128009d1cfde892ffa1c8138fb22f6679391f45",
                        "name": "mob/piglin/step5",
                        "volume": 0.75
                    }
                ],
                "subtitle": "Piglin steps",
                "subtitle_key": "subtitles.entity.piglin.step"
            },
            {
                "field": "sb",
                "id": 988,
                "name": "entity.piglin.step",
                "sounds": [
                    {
                        "hash": "bdcf0eaebc0b0e9e2651e263606c677ff41e8e4b",
                        "name": "mob/piglin/step1",
                        "volume": 0.75
                    },
                    {
                        "hash": "f1453221fbd91bec20ab3e608739b8fc9a17a9a2",
                        "name": "mob/piglin/step2",
                        "volume": 0.75
                    },
                    {
                        "hash": "bb5d472d24c5e21caa0076c50c01635af389c52c",
                        "name": "mob/piglin/step3",
                        "volume": 0.75
                    },
                    {
                        "hash": "abd8c7ef2b1e12c01ff5c9ec3af5b74a891a48f6",
                        "name": "mob/piglin/step4",
                        "volume": 0.75
                    },
                    {
                        "hash": "f128009d1cfde892ffa1c8138fb22f6679391f45",
                        "name": "mob/piglin/step5",
                        "volume": 0.75
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.piglin_brute.step": [
            {
                "field": "sh",
                "id": 994,
                "name": "entity.piglin_brute.step",
                "sounds": [
                    {
                        "hash": "39d403cce416fb8a33bb3f618feb0c35b7e4a50f",
                        "name": "mob/piglin_brute/step1",
                        "volume": 0.75
                    },
                    {
                        "hash": "09bb6e40c4df7096906b3fe7c6ff1e2b1c264cce",
                        "name": "mob/piglin_brute/step2",
                        "volume": 0.75
                    },
                    {
                        "hash": "09d87f230a611dbea1f270176c7b263f6c3fe674",
                        "name": "mob/piglin_brute/step3",
                        "volume": 0.75
                    },
                    {
                        "hash": "ad645926282faa862f27ebda44549e265cc91694",
                        "name": "mob/piglin_brute/step4",
                        "volume": 0.75
                    },
                    {
                        "hash": "97fac4dcf3ff1e2fe2e43072a2cadb0a2a5aa99a",
                        "name": "mob/piglin_brute/step5",
                        "volume": 0.75
                    }
                ],
                "subtitle": "Piglin Brute steps",
                "subtitle_key": "subtitles.entity.piglin_brute.step"
            },
            {
                "field": "sh",
                "id": 994,
                "name": "entity.piglin_brute.step",
                "sounds": [
                    {
                        "hash": "39d403cce416fb8a33bb3f618feb0c35b7e4a50f",
                        "name": "mob/piglin_brute/step1",
                        "volume": 0.75
                    },
                    {
                        "hash": "09bb6e40c4df7096906b3fe7c6ff1e2b1c264cce",
                        "name": "mob/piglin_brute/step2",
                        "volume": 0.75
                    },
                    {
                        "hash": "09d87f230a611dbea1f270176c7b263f6c3fe674",
                        "name": "mob/piglin_brute/step3",
                        "volume": 0.75
                    },
                    {
                        "hash": "ad645926282faa862f27ebda44549e265cc91694",
                        "name": "mob/piglin_brute/step4",
                        "volume": 0.75
                    },
                    {
                        "hash": "97fac4dcf3ff1e2fe2e43072a2cadb0a2a5aa99a",
                        "name": "mob/piglin_brute/step5",
                        "volume": 0.75
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.ravager.step": [
            {
                "field": "tv",
                "id": 1060,
                "name": "entity.ravager.step",
                "sounds": [
                    {
                        "hash": "3b27142409aa1b667a967117b49b960b3fe797fb",
                        "name": "mob/ravager/step1"
                    },
                    {
                        "hash": "a52569d5616b47e9c299e8e3b9f25fd346cf9d83",
                        "name": "mob/ravager/step2"
                    },
                    {
                        "hash": "d2128874ccc2863022cb864f4cce7b90df592c9a",
                        "name": "mob/ravager/step3"
                    },
                    {
                        "hash": "0e137e530e9228da1af0d0e6377a7c46a115e246",
                        "name": "mob/ravager/step4"
                    },
                    {
                        "hash": "1b429890e72f1e901bcb989de0d2f1845016936f",
                        "name": "mob/ravager/step5"
                    }
                ],
                "subtitle": "Ravager steps",
                "subtitle_key": "subtitles.entity.ravager.step"
            },
            {
                "field": "tv",
                "id": 1060,
                "name": "entity.ravager.step",
                "sounds": [
                    {
                        "hash": "3b27142409aa1b667a967117b49b960b3fe797fb",
                        "name": "mob/ravager/step1"
                    },
                    {
                        "hash": "a52569d5616b47e9c299e8e3b9f25fd346cf9d83",
                        "name": "mob/ravager/step2"
                    },
                    {
                        "hash": "d2128874ccc2863022cb864f4cce7b90df592c9a",
                        "name": "mob/ravager/step3"
                    },
                    {
                        "hash": "0e137e530e9228da1af0d0e6377a7c46a115e246",
                        "name": "mob/ravager/step4"
                    },
                    {
                        "hash": "1b429890e72f1e901bcb989de0d2f1845016936f",
                        "name": "mob/ravager/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.sniffer.step": [
            {
                "field": "wy",
                "id": 1219,
                "name": "entity.sniffer.step",
                "sounds": [
                    {
                        "hash": "4d56986efbd9f0c9f6c8a2c4916f17d863456d06",
                        "name": "mob/sniffer/step1"
                    },
                    {
                        "hash": "44361b4a737ed88adf39ed223388c2e5fa1d5e5c",
                        "name": "mob/sniffer/step2"
                    },
                    {
                        "hash": "8d83fef778b1c4a7df04355ced9638f4216a48c7",
                        "name": "mob/sniffer/step3"
                    },
                    {
                        "hash": "d47f18a67f2765ba4930469266429f1440b94772",
                        "name": "mob/sniffer/step4"
                    },
                    {
                        "hash": "ef3675766e2bfba3b8de4fb707d2d12baba6cb18",
                        "name": "mob/sniffer/step5"
                    },
                    {
                        "hash": "179bdc9c9436143f297d1338744bbe7d751c898a",
                        "name": "mob/sniffer/step6"
                    }
                ],
                "subtitle": "Sniffer steps",
                "subtitle_key": "subtitles.entity.sniffer.step"
            },
            {
                "field": "wy",
                "id": 1219,
                "name": "entity.sniffer.step",
                "sounds": [
                    {
                        "hash": "4d56986efbd9f0c9f6c8a2c4916f17d863456d06",
                        "name": "mob/sniffer/step1"
                    },
                    {
                        "hash": "44361b4a737ed88adf39ed223388c2e5fa1d5e5c",
                        "name": "mob/sniffer/step2"
                    },
                    {
                        "hash": "8d83fef778b1c4a7df04355ced9638f4216a48c7",
                        "name": "mob/sniffer/step3"
                    },
                    {
                        "hash": "d47f18a67f2765ba4930469266429f1440b94772",
                        "name": "mob/sniffer/step4"
                    },
                    {
                        "hash": "ef3675766e2bfba3b8de4fb707d2d12baba6cb18",
                        "name": "mob/sniffer/step5"
                    },
                    {
                        "hash": "179bdc9c9436143f297d1338744bbe7d751c898a",
                        "name": "mob/sniffer/step6"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.warden.step": [
            {
                "field": "zH",
                "id": 1384,
                "name": "entity.warden.step",
                "sounds": [
                    {
                        "hash": "c4add1a44e9e94af623c44c9a2193cb3586ced49",
                        "name": "mob/warden/step_1",
                        "volume": 0.3
                    },
                    {
                        "hash": "20e4e615ef22d60605f624f75f10fdab41f81389",
                        "name": "mob/warden/step_2",
                        "volume": 0.3
                    },
                    {
                        "hash": "989283b4fc32be9f9372af936087898736522f5e",
                        "name": "mob/warden/step_3",
                        "volume": 0.3
                    },
                    {
                        "hash": "045fb18cd4b3481dea67e008a34e688fff8afc98",
                        "name": "mob/warden/step_4",
                        "volume": 0.3
                    }
                ],
                "subtitle": "Warden steps",
                "subtitle_key": "subtitles.entity.warden.step"
            },
            {
                "field": "zN",
                "id": 1390,
                "name": "entity.warden.step",
                "sounds": [
                    {
                        "hash": "c4add1a44e9e94af623c44c9a2193cb3586ced49",
                        "name": "mob/warden/step_1",
                        "volume": 0.3
                    },
                    {
                        "hash": "20e4e615ef22d60605f624f75f10fdab41f81389",
                        "name": "mob/warden/step_2",
                        "volume": 0.3
                    },
                    {
                        "hash": "989283b4fc32be9f9372af936087898736522f5e",
                        "name": "mob/warden/step_3",
                        "volume": 0.3
                    },
                    {
                        "hash": "045fb18cd4b3481dea67e008a34e688fff8afc98",
                        "name": "mob/warden/step_4",
                        "volume": 0.3
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ],
        "entity.zoglin.step": [
            {
                "field": "AO",
                "id": 1443,
                "name": "entity.zoglin.step",
                "sounds": [
                    {
                        "hash": "757a1663baf4c967a03bb402e52db06b65e81528",
                        "name": "mob/zoglin/step1"
                    },
                    {
                        "hash": "9a3b96d3a81e9f6a9e4dad64c198924358f603cc",
                        "name": "mob/zoglin/step2"
                    },
                    {
                        "hash": "297dbb5a085c18120b11ef7596c72c6b6177e6c0",
                        "name": "mob/zoglin/step3"
                    },
                    {
                        "hash": "22bac75c94ddf2d843e383b2e7289cacb579d6cb",
                        "name": "mob/zoglin/step4"
                    },
                    {
                        "hash": "c96319a5a45b1ab23fa9ba9c68d303f37d3624d3",
                        "name": "mob/zoglin/step5"
                    }
                ],
                "subtitle": "Zoglin steps",
                "subtitle_key": "subtitles.entity.zoglin.step"
            },
            {
                "field": "AZ",
                "id": 1454,
                "name": "entity.zoglin.step",
                "sounds": [
                    {
                        "hash": "757a1663baf4c967a03bb402e52db06b65e81528",
                        "name": "mob/zoglin/step1"
                    },
                    {
                        "hash": "9a3b96d3a81e9f6a9e4dad64c198924358f603cc",
                        "name": "mob/zoglin/step2"
                    },
                    {
                        "hash": "297dbb5a085c18120b11ef7596c72c6b6177e6c0",
                        "name": "mob/zoglin/step3"
                    },
                    {
                        "hash": "22bac75c94ddf2d843e383b2e7289cacb579d6cb",
                        "name": "mob/zoglin/step4"
                    },
                    {
                        "hash": "c96319a5a45b1ab23fa9ba9c68d303f37d3624d3",
                        "name": "mob/zoglin/step5"
                    }
                ],
                "subtitle": "Footsteps",
                "subtitle_key": "subtitles.block.generic.footsteps"
            }
        ]
    },
    "stats": {},
    "tags": {
        "blocks/camel_sand_step_sound_blocks": [
            null,
            {
                "name": "camel_sand_step_sound_blocks",
                "type": "blocks",
                "values": [
                    "minecraft:sand",
                    "minecraft:red_sand",
                    "minecraft:suspicious_sand",
                    "minecraft:suspicious_sand",
                    "minecraft:white_concrete_powder",
                    "minecraft:orange_concrete_powder",
                    "minecraft:magenta_concrete_powder",
                    "minecraft:light_blue_concrete_powder",
                    "minecraft:yellow_concrete_powder",
                    "minecraft:lime_concrete_powder",
                    "minecraft:pink_concrete_powder",
                    "minecraft:gray_concrete_powder",
                    "minecraft:light_gray_concrete_powder",
                    "minecraft:cyan_concrete_powder",
                    "minecraft:purple_concrete_powder",
                    "minecraft:blue_concrete_powder",
                    "minecraft:brown_concrete_powder",
                    "minecraft:green_concrete_powder",
                    "minecraft:red_concrete_powder",
                    "minecraft:black_concrete_powder"
                ]
            }
        ],
        "blocks/concrete_powder": [
            null,
            {
                "name": "concrete_powder",
                "type": "blocks",
                "values": [
                    "minecraft:white_concrete_powder",
                    "minecraft:orange_concrete_powder",
                    "minecraft:magenta_concrete_powder",
                    "minecraft:light_blue_concrete_powder",
                    "minecraft:yellow_concrete_powder",
                    "minecraft:lime_concrete_powder",
                    "minecraft:pink_concrete_powder",
                    "minecraft:gray_concrete_powder",
                    "minecraft:light_gray_concrete_powder",
                    "minecraft:cyan_concrete_powder",
                    "minecraft:purple_concrete_powder",
                    "minecraft:blue_concrete_powder",
                    "minecraft:brown_concrete_powder",
                    "minecraft:green_concrete_powder",
                    "minecraft:red_concrete_powder",
                    "minecraft:black_concrete_powder"
                ]
            }
        ],
        "blocks/flowers": [
            {
                "name": "flowers",
                "type": "blocks",
                "values": [
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:torchflower",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:pitcher_plant",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule",
                    "minecraft:cherry_leaves",
                    "minecraft:pink_petals"
                ]
            },
            {
                "name": "flowers",
                "type": "blocks",
                "values": [
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:torchflower",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:pitcher_plant",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule",
                    "minecraft:cherry_leaves",
                    "minecraft:pink_petals",
                    "minecraft:chorus_flower",
                    "minecraft:spore_blossom"
                ]
            }
        ],
        "blocks/mineable/shovel": [
            {
                "name": "mineable/shovel",
                "type": "blocks",
                "values": [
                    "minecraft:clay",
                    "minecraft:dirt",
                    "minecraft:coarse_dirt",
                    "minecraft:podzol",
                    "minecraft:farmland",
                    "minecraft:grass_block",
                    "minecraft:gravel",
                    "minecraft:mycelium",
                    "minecraft:sand",
                    "minecraft:red_sand",
                    "minecraft:snow_block",
                    "minecraft:snow",
                    "minecraft:soul_sand",
                    "minecraft:dirt_path",
                    "minecraft:white_concrete_powder",
                    "minecraft:orange_concrete_powder",
                    "minecraft:magenta_concrete_powder",
                    "minecraft:light_blue_concrete_powder",
                    "minecraft:yellow_concrete_powder",
                    "minecraft:lime_concrete_powder",
                    "minecraft:pink_concrete_powder",
                    "minecraft:gray_concrete_powder",
                    "minecraft:light_gray_concrete_powder",
                    "minecraft:cyan_concrete_powder",
                    "minecraft:purple_concrete_powder",
                    "minecraft:blue_concrete_powder",
                    "minecraft:brown_concrete_powder",
                    "minecraft:green_concrete_powder",
                    "minecraft:red_concrete_powder",
                    "minecraft:black_concrete_powder",
                    "minecraft:soul_soil",
                    "minecraft:rooted_dirt",
                    "minecraft:muddy_mangrove_roots",
                    "minecraft:mud",
                    "minecraft:suspicious_sand",
                    "minecraft:suspicious_gravel"
                ]
            },
            {
                "name": "mineable/shovel",
                "type": "blocks",
                "values": [
                    "minecraft:clay",
                    "minecraft:dirt",
                    "minecraft:coarse_dirt",
                    "minecraft:podzol",
                    "minecraft:farmland",
                    "minecraft:grass_block",
                    "minecraft:gravel",
                    "minecraft:mycelium",
                    "minecraft:sand",
                    "minecraft:red_sand",
                    "minecraft:snow_block",
                    "minecraft:snow",
                    "minecraft:soul_sand",
                    "minecraft:dirt_path",
                    "minecraft:soul_soil",
                    "minecraft:rooted_dirt",
                    "minecraft:muddy_mangrove_roots",
                    "minecraft:mud",
                    "minecraft:suspicious_sand",
                    "minecraft:suspicious_gravel",
                    "minecraft:white_concrete_powder",
                    "minecraft:orange_concrete_powder",
                    "minecraft:magenta_concrete_powder",
                    "minecraft:light_blue_concrete_powder",
                    "minecraft:yellow_concrete_powder",
                    "minecraft:lime_concrete_powder",
                    "minecraft:pink_concrete_powder",
                    "minecraft:gray_concrete_powder",
                    "minecraft:light_gray_concrete_powder",
                    "minecraft:cyan_concrete_powder",
                    "minecraft:purple_concrete_powder",
                    "minecraft:blue_concrete_powder",
                    "minecraft:brown_concrete_powder",
                    "minecraft:green_concrete_powder",
                    "minecraft:red_concrete_powder",
                    "minecraft:black_concrete_powder"
                ]
            }
        ],
        "damage_type/always_kills_armor_stands": [
            null,
            {
                "name": "always_kills_armor_stands",
                "type": "damage_type",
                "values": [
                    "minecraft:arrow",
                    "minecraft:trident",
                    "minecraft:mob_projectile",
                    "minecraft:fireball",
                    "minecraft:wither_skull"
                ]
            }
        ],
        "damage_type/no_knockback": [
            null,
            {
                "name": "no_knockback",
                "type": "damage_type",
                "values": [
                    "minecraft:explosion",
                    "minecraft:player_explosion",
                    "minecraft:bad_respawn_point"
                ]
            }
        ],
        "entity_types/non_controlling_rider": [
            null,
            {
                "name": "non_controlling_rider",
                "type": "entity_types",
                "values": [
                    "minecraft:slime",
                    "minecraft:magma_cube"
                ]
            }
        ],
        "game_events/vibrations": [
            {
                "name": "vibrations",
                "type": "game_events",
                "values": [
                    "minecraft:block_attach",
                    "minecraft:block_change",
                    "minecraft:block_close",
                    "minecraft:block_destroy",
                    "minecraft:block_detach",
                    "minecraft:block_open",
                    "minecraft:block_place",
                    "minecraft:block_activate",
                    "minecraft:block_deactivate",
                    "minecraft:container_close",
                    "minecraft:container_open",
                    "minecraft:drink",
                    "minecraft:eat",
                    "minecraft:elytra_glide",
                    "minecraft:entity_damage",
                    "minecraft:entity_die",
                    "minecraft:entity_dismount",
                    "minecraft:entity_interact",
                    "minecraft:entity_mount",
                    "minecraft:entity_place",
                    "minecraft:entity_roar",
                    "minecraft:entity_shake",
                    "minecraft:equip",
                    "minecraft:explode",
                    "minecraft:fluid_pickup",
                    "minecraft:fluid_place",
                    "minecraft:hit_ground",
                    "minecraft:instrument_play",
                    "minecraft:item_interact_finish",
                    "minecraft:lightning_strike",
                    "minecraft:note_block_play",
                    "minecraft:prime_fuse",
                    "minecraft:projectile_land",
                    "minecraft:projectile_shoot",
                    "minecraft:shear",
                    "minecraft:splash",
                    "minecraft:step",
                    "minecraft:swim",
                    "minecraft:teleport",
                    "minecraft:resonate_1",
                    "minecraft:resonate_2",
                    "minecraft:resonate_3",
                    "minecraft:resonate_4",
                    "minecraft:resonate_5",
                    "minecraft:resonate_6",
                    "minecraft:resonate_7",
                    "minecraft:resonate_8",
                    "minecraft:resonate_9",
                    "minecraft:resonate_10",
                    "minecraft:resonate_11",
                    "minecraft:resonate_12",
                    "minecraft:resonate_13",
                    "minecraft:resonate_14",
                    "minecraft:resonate_15",
                    "minecraft:flap"
                ]
            },
            {
                "name": "vibrations",
                "type": "game_events",
                "values": [
                    "minecraft:block_attach",
                    "minecraft:block_change",
                    "minecraft:block_close",
                    "minecraft:block_destroy",
                    "minecraft:block_detach",
                    "minecraft:block_open",
                    "minecraft:block_place",
                    "minecraft:block_activate",
                    "minecraft:block_deactivate",
                    "minecraft:container_close",
                    "minecraft:container_open",
                    "minecraft:drink",
                    "minecraft:eat",
                    "minecraft:elytra_glide",
                    "minecraft:entity_damage",
                    "minecraft:entity_die",
                    "minecraft:entity_dismount",
                    "minecraft:entity_interact",
                    "minecraft:entity_mount",
                    "minecraft:entity_place",
                    "minecraft:entity_action",
                    "minecraft:equip",
                    "minecraft:explode",
                    "minecraft:fluid_pickup",
                    "minecraft:fluid_place",
                    "minecraft:hit_ground",
                    "minecraft:instrument_play",
                    "minecraft:item_interact_finish",
                    "minecraft:lightning_strike",
                    "minecraft:note_block_play",
                    "minecraft:prime_fuse",
                    "minecraft:projectile_land",
                    "minecraft:projectile_shoot",
                    "minecraft:shear",
                    "minecraft:splash",
                    "minecraft:step",
                    "minecraft:swim",
                    "minecraft:teleport",
                    "minecraft:unequip",
                    "minecraft:resonate_1",
                    "minecraft:resonate_2",
                    "minecraft:resonate_3",
                    "minecraft:resonate_4",
                    "minecraft:resonate_5",
                    "minecraft:resonate_6",
                    "minecraft:resonate_7",
                    "minecraft:resonate_8",
                    "minecraft:resonate_9",
                    "minecraft:resonate_10",
                    "minecraft:resonate_11",
                    "minecraft:resonate_12",
                    "minecraft:resonate_13",
                    "minecraft:resonate_14",
                    "minecraft:resonate_15",
                    "minecraft:flap"
                ]
            }
        ],
        "game_events/warden_can_listen": [
            {
                "name": "warden_can_listen",
                "type": "game_events",
                "values": [
                    "minecraft:block_attach",
                    "minecraft:block_change",
                    "minecraft:block_close",
                    "minecraft:block_destroy",
                    "minecraft:block_detach",
                    "minecraft:block_open",
                    "minecraft:block_place",
                    "minecraft:block_activate",
                    "minecraft:block_deactivate",
                    "minecraft:container_close",
                    "minecraft:container_open",
                    "minecraft:drink",
                    "minecraft:eat",
                    "minecraft:elytra_glide",
                    "minecraft:entity_damage",
                    "minecraft:entity_die",
                    "minecraft:entity_dismount",
                    "minecraft:entity_interact",
                    "minecraft:entity_mount",
                    "minecraft:entity_place",
                    "minecraft:entity_roar",
                    "minecraft:entity_shake",
                    "minecraft:equip",
                    "minecraft:explode",
                    "minecraft:fluid_pickup",
                    "minecraft:fluid_place",
                    "minecraft:hit_ground",
                    "minecraft:instrument_play",
                    "minecraft:item_interact_finish",
                    "minecraft:lightning_strike",
                    "minecraft:note_block_play",
                    "minecraft:prime_fuse",
                    "minecraft:projectile_land",
                    "minecraft:projectile_shoot",
                    "minecraft:shear",
                    "minecraft:splash",
                    "minecraft:step",
                    "minecraft:swim",
                    "minecraft:teleport",
                    "minecraft:resonate_1",
                    "minecraft:resonate_2",
                    "minecraft:resonate_3",
                    "minecraft:resonate_4",
                    "minecraft:resonate_5",
                    "minecraft:resonate_6",
                    "minecraft:resonate_7",
                    "minecraft:resonate_8",
                    "minecraft:resonate_9",
                    "minecraft:resonate_10",
                    "minecraft:resonate_11",
                    "minecraft:resonate_12",
                    "minecraft:resonate_13",
                    "minecraft:resonate_14",
                    "minecraft:resonate_15",
                    "minecraft:shriek",
                    "minecraft:sculk_sensor_tendrils_clicking"
                ]
            },
            {
                "name": "warden_can_listen",
                "type": "game_events",
                "values": [
                    "minecraft:block_attach",
                    "minecraft:block_change",
                    "minecraft:block_close",
                    "minecraft:block_destroy",
                    "minecraft:block_detach",
                    "minecraft:block_open",
                    "minecraft:block_place",
                    "minecraft:block_activate",
                    "minecraft:block_deactivate",
                    "minecraft:container_close",
                    "minecraft:container_open",
                    "minecraft:drink",
                    "minecraft:eat",
                    "minecraft:elytra_glide",
                    "minecraft:entity_damage",
                    "minecraft:entity_die",
                    "minecraft:entity_dismount",
                    "minecraft:entity_interact",
                    "minecraft:entity_mount",
                    "minecraft:entity_place",
                    "minecraft:entity_action",
                    "minecraft:equip",
                    "minecraft:explode",
                    "minecraft:fluid_pickup",
                    "minecraft:fluid_place",
                    "minecraft:hit_ground",
                    "minecraft:instrument_play",
                    "minecraft:item_interact_finish",
                    "minecraft:lightning_strike",
                    "minecraft:note_block_play",
                    "minecraft:prime_fuse",
                    "minecraft:projectile_land",
                    "minecraft:projectile_shoot",
                    "minecraft:shear",
                    "minecraft:splash",
                    "minecraft:step",
                    "minecraft:swim",
                    "minecraft:teleport",
                    "minecraft:unequip",
                    "minecraft:resonate_1",
                    "minecraft:resonate_2",
                    "minecraft:resonate_3",
                    "minecraft:resonate_4",
                    "minecraft:resonate_5",
                    "minecraft:resonate_6",
                    "minecraft:resonate_7",
                    "minecraft:resonate_8",
                    "minecraft:resonate_9",
                    "minecraft:resonate_10",
                    "minecraft:resonate_11",
                    "minecraft:resonate_12",
                    "minecraft:resonate_13",
                    "minecraft:resonate_14",
                    "minecraft:resonate_15",
                    "minecraft:shriek",
                    "minecraft:sculk_sensor_tendrils_clicking"
                ]
            }
        ],
        "items/flowers": [
            {
                "name": "flowers",
                "type": "items",
                "values": [
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:torchflower",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:pitcher_plant",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule",
                    "minecraft:cherry_leaves",
                    "minecraft:pink_petals"
                ]
            },
            {
                "name": "flowers",
                "type": "items",
                "values": [
                    "minecraft:dandelion",
                    "minecraft:poppy",
                    "minecraft:blue_orchid",
                    "minecraft:allium",
                    "minecraft:azure_bluet",
                    "minecraft:red_tulip",
                    "minecraft:orange_tulip",
                    "minecraft:white_tulip",
                    "minecraft:pink_tulip",
                    "minecraft:oxeye_daisy",
                    "minecraft:cornflower",
                    "minecraft:lily_of_the_valley",
                    "minecraft:wither_rose",
                    "minecraft:torchflower",
                    "minecraft:sunflower",
                    "minecraft:lilac",
                    "minecraft:peony",
                    "minecraft:rose_bush",
                    "minecraft:pitcher_plant",
                    "minecraft:flowering_azalea_leaves",
                    "minecraft:flowering_azalea",
                    "minecraft:mangrove_propagule",
                    "minecraft:cherry_leaves",
                    "minecraft:pink_petals",
                    "minecraft:chorus_flower",
                    "minecraft:spore_blossom"
                ]
            }
        ]
    },
    "tileentity": {
        "tileentities": {}
    },
    "version": {
        "data": [
            3465,
            3578
        ],
        "id": [
            "1.20.1",
            "1.20.2"
        ],
        "name": [
            "1.20.1",
            "1.20.2"
        ],
        "protocol": [
            763,
            764
        ]
    }
}